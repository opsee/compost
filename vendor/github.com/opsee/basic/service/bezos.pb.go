// Code generated by protoc-gen-gogo.
// source: bezos.proto
// DO NOT EDIT!

/*
	Package service is a generated protocol buffer package.

	It is generated from these files:
		bezos.proto
		checker.proto
		keelhaul.proto
		spanx.proto
		vape.proto

	It has these top-level messages:
		BezosRequest
		BezosResponse
		CheckResourceResponse
		ResourceResponse
		CheckResourceRequest
		ResultsResource
		TestCheckRequest
		TestCheckResponse
		Filter
		ListBastionStatesRequest
		ListBastionStatesResponse
		ScanVpcsRequest
		ScanVpcsResponse
		LaunchStackRequest
		LaunchStackResponse
		AuthenticateBastionRequest
		AuthenticateBastionResponse
		EnhancedCombatModeRequest
		EnhancedCombatModeResponse
		GetRoleStackRequest
		GetRoleStackResponse
		GetCredentialsRequest
		GetCredentialsResponse
		ListCustomersResponse
		GetUserRequest
		GetUserResponse
		ListUsersRequest
		ListUsersResponse
		InviteUserRequest
		InviteUserResponse
		DeleteUserRequest
		DeleteUserResponse
		UpdateUserRequest
		UpdateUserPermsRequest
		UserTokenResponse
		GetTeamRequest
		GetTeamResponse
		UpdateTeamRequest
		UpdateTeamResponse
		DeleteTeamRequest
		DeleteTeamResponse
*/
package service

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/opsee/protobuf/opseeproto"
import opsee_types "github.com/opsee/protobuf/opseeproto/types"
import opsee_aws_cloudwatch "github.com/opsee/basic/schema/aws/cloudwatch"
import opsee_aws_ec2 "github.com/opsee/basic/schema/aws/ec2"
import opsee_aws_ecs "github.com/opsee/basic/schema/aws/ecs"
import opsee_aws_elb "github.com/opsee/basic/schema/aws/elb"
import opsee_aws_autoscaling "github.com/opsee/basic/schema/aws/autoscaling"
import opsee_aws_rds "github.com/opsee/basic/schema/aws/rds"
import opsee1 "github.com/opsee/basic/schema"

import github_com_graphql_go_graphql "github.com/graphql-go/graphql"
import github_com_opsee_protobuf_plugin_graphql_scalars "github.com/opsee/protobuf/plugin/graphql/scalars"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type BezosRequest struct {
	User   *opsee1.User           `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Region string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	VpcId  string                 `protobuf:"bytes,3,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	MaxAge *opsee_types.Timestamp `protobuf:"bytes,4,opt,name=max_age,json=maxAge" json:"max_age,omitempty"`
	// Types that are valid to be assigned to Input:
	//	*BezosRequest_Cloudwatch_ListMetricsInput
	//	*BezosRequest_Cloudwatch_GetMetricStatisticsInput
	//	*BezosRequest_Cloudwatch_DescribeAlarmsInput
	//	*BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput
	//	*BezosRequest_Ec2_DescribeInstancesInput
	//	*BezosRequest_Ec2_DescribeSecurityGroupsInput
	//	*BezosRequest_Ec2_DescribeSubnetsInput
	//	*BezosRequest_Ec2_DescribeVpcsInput
	//	*BezosRequest_Ec2_DescribeRouteTablesInput
	//	*BezosRequest_Elb_DescribeLoadBalancersInput
	//	*BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput
	//	*BezosRequest_Rds_DescribeDBInstancesInput
	//	*BezosRequest_Ecs_ListTasksInput
	//	*BezosRequest_Ecs_DescribeTasksInput
	//	*BezosRequest_Ecs_DescribeContainerInstancesInput
	//	*BezosRequest_Ecs_ListClustersInput
	//	*BezosRequest_Ecs_ListServicesInput
	//	*BezosRequest_Ecs_DescribeServicesInput
	//	*BezosRequest_Ecs_ListContainerInstancesInput
	Input isBezosRequest_Input `protobuf_oneof:"input"`
}

func (m *BezosRequest) Reset()                    { *m = BezosRequest{} }
func (m *BezosRequest) String() string            { return proto.CompactTextString(m) }
func (*BezosRequest) ProtoMessage()               {}
func (*BezosRequest) Descriptor() ([]byte, []int) { return fileDescriptorBezos, []int{0} }

type isBezosRequest_Input interface {
	isBezosRequest_Input()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type BezosRequest_Cloudwatch_ListMetricsInput struct {
	Cloudwatch_ListMetricsInput *opsee_aws_cloudwatch.ListMetricsInput `protobuf:"bytes,101,opt,name=cloudwatch_ListMetricsInput,json=cloudwatchListMetricsInput,oneof"`
}
type BezosRequest_Cloudwatch_GetMetricStatisticsInput struct {
	Cloudwatch_GetMetricStatisticsInput *opsee_aws_cloudwatch.GetMetricStatisticsInput `protobuf:"bytes,102,opt,name=cloudwatch_GetMetricStatisticsInput,json=cloudwatchGetMetricStatisticsInput,oneof"`
}
type BezosRequest_Cloudwatch_DescribeAlarmsInput struct {
	Cloudwatch_DescribeAlarmsInput *opsee_aws_cloudwatch.DescribeAlarmsInput `protobuf:"bytes,103,opt,name=cloudwatch_DescribeAlarmsInput,json=cloudwatchDescribeAlarmsInput,oneof"`
}
type BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput struct {
	Cloudwatch_DescribeAlarmsForMetricInput *opsee_aws_cloudwatch.DescribeAlarmsForMetricInput `protobuf:"bytes,104,opt,name=cloudwatch_DescribeAlarmsForMetricInput,json=cloudwatchDescribeAlarmsForMetricInput,oneof"`
}
type BezosRequest_Ec2_DescribeInstancesInput struct {
	Ec2_DescribeInstancesInput *opsee_aws_ec2.DescribeInstancesInput `protobuf:"bytes,201,opt,name=ec2_DescribeInstancesInput,json=ec2DescribeInstancesInput,oneof"`
}
type BezosRequest_Ec2_DescribeSecurityGroupsInput struct {
	Ec2_DescribeSecurityGroupsInput *opsee_aws_ec2.DescribeSecurityGroupsInput `protobuf:"bytes,202,opt,name=ec2_DescribeSecurityGroupsInput,json=ec2DescribeSecurityGroupsInput,oneof"`
}
type BezosRequest_Ec2_DescribeSubnetsInput struct {
	Ec2_DescribeSubnetsInput *opsee_aws_ec2.DescribeSubnetsInput `protobuf:"bytes,203,opt,name=ec2_DescribeSubnetsInput,json=ec2DescribeSubnetsInput,oneof"`
}
type BezosRequest_Ec2_DescribeVpcsInput struct {
	Ec2_DescribeVpcsInput *opsee_aws_ec2.DescribeVpcsInput `protobuf:"bytes,204,opt,name=ec2_DescribeVpcsInput,json=ec2DescribeVpcsInput,oneof"`
}
type BezosRequest_Ec2_DescribeRouteTablesInput struct {
	Ec2_DescribeRouteTablesInput *opsee_aws_ec2.DescribeRouteTablesInput `protobuf:"bytes,205,opt,name=ec2_DescribeRouteTablesInput,json=ec2DescribeRouteTablesInput,oneof"`
}
type BezosRequest_Elb_DescribeLoadBalancersInput struct {
	Elb_DescribeLoadBalancersInput *opsee_aws_elb.DescribeLoadBalancersInput `protobuf:"bytes,301,opt,name=elb_DescribeLoadBalancersInput,json=elbDescribeLoadBalancersInput,oneof"`
}
type BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput struct {
	Autoscaling_DescribeAutoScalingGroupsInput *opsee_aws_autoscaling.DescribeAutoScalingGroupsInput `protobuf:"bytes,401,opt,name=autoscaling_DescribeAutoScalingGroupsInput,json=autoscalingDescribeAutoScalingGroupsInput,oneof"`
}
type BezosRequest_Rds_DescribeDBInstancesInput struct {
	Rds_DescribeDBInstancesInput *opsee_aws_rds.DescribeDBInstancesInput `protobuf:"bytes,501,opt,name=rds_DescribeDBInstancesInput,json=rdsDescribeDBInstancesInput,oneof"`
}
type BezosRequest_Ecs_ListTasksInput struct {
	Ecs_ListTasksInput *opsee_aws_ecs.ListTasksInput `protobuf:"bytes,601,opt,name=ecs_ListTasksInput,json=ecsListTasksInput,oneof"`
}
type BezosRequest_Ecs_DescribeTasksInput struct {
	Ecs_DescribeTasksInput *opsee_aws_ecs.DescribeTasksInput `protobuf:"bytes,602,opt,name=ecs_DescribeTasksInput,json=ecsDescribeTasksInput,oneof"`
}
type BezosRequest_Ecs_DescribeContainerInstancesInput struct {
	Ecs_DescribeContainerInstancesInput *opsee_aws_ecs.DescribeContainerInstancesInput `protobuf:"bytes,603,opt,name=ecs_DescribeContainerInstancesInput,json=ecsDescribeContainerInstancesInput,oneof"`
}
type BezosRequest_Ecs_ListClustersInput struct {
	Ecs_ListClustersInput *opsee_aws_ecs.ListClustersInput `protobuf:"bytes,604,opt,name=ecs_ListClustersInput,json=ecsListClustersInput,oneof"`
}
type BezosRequest_Ecs_ListServicesInput struct {
	Ecs_ListServicesInput *opsee_aws_ecs.ListServicesInput `protobuf:"bytes,605,opt,name=ecs_ListServicesInput,json=ecsListServicesInput,oneof"`
}
type BezosRequest_Ecs_DescribeServicesInput struct {
	Ecs_DescribeServicesInput *opsee_aws_ecs.DescribeServicesInput `protobuf:"bytes,606,opt,name=ecs_DescribeServicesInput,json=ecsDescribeServicesInput,oneof"`
}
type BezosRequest_Ecs_ListContainerInstancesInput struct {
	Ecs_ListContainerInstancesInput *opsee_aws_ecs.ListContainerInstancesInput `protobuf:"bytes,607,opt,name=ecs_ListContainerInstancesInput,json=ecsListContainerInstancesInput,oneof"`
}

func (*BezosRequest_Cloudwatch_ListMetricsInput) isBezosRequest_Input()                {}
func (*BezosRequest_Cloudwatch_GetMetricStatisticsInput) isBezosRequest_Input()        {}
func (*BezosRequest_Cloudwatch_DescribeAlarmsInput) isBezosRequest_Input()             {}
func (*BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput) isBezosRequest_Input()    {}
func (*BezosRequest_Ec2_DescribeInstancesInput) isBezosRequest_Input()                 {}
func (*BezosRequest_Ec2_DescribeSecurityGroupsInput) isBezosRequest_Input()            {}
func (*BezosRequest_Ec2_DescribeSubnetsInput) isBezosRequest_Input()                   {}
func (*BezosRequest_Ec2_DescribeVpcsInput) isBezosRequest_Input()                      {}
func (*BezosRequest_Ec2_DescribeRouteTablesInput) isBezosRequest_Input()               {}
func (*BezosRequest_Elb_DescribeLoadBalancersInput) isBezosRequest_Input()             {}
func (*BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput) isBezosRequest_Input() {}
func (*BezosRequest_Rds_DescribeDBInstancesInput) isBezosRequest_Input()               {}
func (*BezosRequest_Ecs_ListTasksInput) isBezosRequest_Input()                         {}
func (*BezosRequest_Ecs_DescribeTasksInput) isBezosRequest_Input()                     {}
func (*BezosRequest_Ecs_DescribeContainerInstancesInput) isBezosRequest_Input()        {}
func (*BezosRequest_Ecs_ListClustersInput) isBezosRequest_Input()                      {}
func (*BezosRequest_Ecs_ListServicesInput) isBezosRequest_Input()                      {}
func (*BezosRequest_Ecs_DescribeServicesInput) isBezosRequest_Input()                  {}
func (*BezosRequest_Ecs_ListContainerInstancesInput) isBezosRequest_Input()            {}

func (m *BezosRequest) GetInput() isBezosRequest_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *BezosRequest) GetUser() *opsee1.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *BezosRequest) GetMaxAge() *opsee_types.Timestamp {
	if m != nil {
		return m.MaxAge
	}
	return nil
}

func (m *BezosRequest) GetCloudwatch_ListMetricsInput() *opsee_aws_cloudwatch.ListMetricsInput {
	if x, ok := m.GetInput().(*BezosRequest_Cloudwatch_ListMetricsInput); ok {
		return x.Cloudwatch_ListMetricsInput
	}
	return nil
}

func (m *BezosRequest) GetCloudwatch_GetMetricStatisticsInput() *opsee_aws_cloudwatch.GetMetricStatisticsInput {
	if x, ok := m.GetInput().(*BezosRequest_Cloudwatch_GetMetricStatisticsInput); ok {
		return x.Cloudwatch_GetMetricStatisticsInput
	}
	return nil
}

func (m *BezosRequest) GetCloudwatch_DescribeAlarmsInput() *opsee_aws_cloudwatch.DescribeAlarmsInput {
	if x, ok := m.GetInput().(*BezosRequest_Cloudwatch_DescribeAlarmsInput); ok {
		return x.Cloudwatch_DescribeAlarmsInput
	}
	return nil
}

func (m *BezosRequest) GetCloudwatch_DescribeAlarmsForMetricInput() *opsee_aws_cloudwatch.DescribeAlarmsForMetricInput {
	if x, ok := m.GetInput().(*BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput); ok {
		return x.Cloudwatch_DescribeAlarmsForMetricInput
	}
	return nil
}

func (m *BezosRequest) GetEc2_DescribeInstancesInput() *opsee_aws_ec2.DescribeInstancesInput {
	if x, ok := m.GetInput().(*BezosRequest_Ec2_DescribeInstancesInput); ok {
		return x.Ec2_DescribeInstancesInput
	}
	return nil
}

func (m *BezosRequest) GetEc2_DescribeSecurityGroupsInput() *opsee_aws_ec2.DescribeSecurityGroupsInput {
	if x, ok := m.GetInput().(*BezosRequest_Ec2_DescribeSecurityGroupsInput); ok {
		return x.Ec2_DescribeSecurityGroupsInput
	}
	return nil
}

func (m *BezosRequest) GetEc2_DescribeSubnetsInput() *opsee_aws_ec2.DescribeSubnetsInput {
	if x, ok := m.GetInput().(*BezosRequest_Ec2_DescribeSubnetsInput); ok {
		return x.Ec2_DescribeSubnetsInput
	}
	return nil
}

func (m *BezosRequest) GetEc2_DescribeVpcsInput() *opsee_aws_ec2.DescribeVpcsInput {
	if x, ok := m.GetInput().(*BezosRequest_Ec2_DescribeVpcsInput); ok {
		return x.Ec2_DescribeVpcsInput
	}
	return nil
}

func (m *BezosRequest) GetEc2_DescribeRouteTablesInput() *opsee_aws_ec2.DescribeRouteTablesInput {
	if x, ok := m.GetInput().(*BezosRequest_Ec2_DescribeRouteTablesInput); ok {
		return x.Ec2_DescribeRouteTablesInput
	}
	return nil
}

func (m *BezosRequest) GetElb_DescribeLoadBalancersInput() *opsee_aws_elb.DescribeLoadBalancersInput {
	if x, ok := m.GetInput().(*BezosRequest_Elb_DescribeLoadBalancersInput); ok {
		return x.Elb_DescribeLoadBalancersInput
	}
	return nil
}

func (m *BezosRequest) GetAutoscaling_DescribeAutoScalingGroupsInput() *opsee_aws_autoscaling.DescribeAutoScalingGroupsInput {
	if x, ok := m.GetInput().(*BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput); ok {
		return x.Autoscaling_DescribeAutoScalingGroupsInput
	}
	return nil
}

func (m *BezosRequest) GetRds_DescribeDBInstancesInput() *opsee_aws_rds.DescribeDBInstancesInput {
	if x, ok := m.GetInput().(*BezosRequest_Rds_DescribeDBInstancesInput); ok {
		return x.Rds_DescribeDBInstancesInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_ListTasksInput() *opsee_aws_ecs.ListTasksInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_ListTasksInput); ok {
		return x.Ecs_ListTasksInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_DescribeTasksInput() *opsee_aws_ecs.DescribeTasksInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_DescribeTasksInput); ok {
		return x.Ecs_DescribeTasksInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_DescribeContainerInstancesInput() *opsee_aws_ecs.DescribeContainerInstancesInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_DescribeContainerInstancesInput); ok {
		return x.Ecs_DescribeContainerInstancesInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_ListClustersInput() *opsee_aws_ecs.ListClustersInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_ListClustersInput); ok {
		return x.Ecs_ListClustersInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_ListServicesInput() *opsee_aws_ecs.ListServicesInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_ListServicesInput); ok {
		return x.Ecs_ListServicesInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_DescribeServicesInput() *opsee_aws_ecs.DescribeServicesInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_DescribeServicesInput); ok {
		return x.Ecs_DescribeServicesInput
	}
	return nil
}

func (m *BezosRequest) GetEcs_ListContainerInstancesInput() *opsee_aws_ecs.ListContainerInstancesInput {
	if x, ok := m.GetInput().(*BezosRequest_Ecs_ListContainerInstancesInput); ok {
		return x.Ecs_ListContainerInstancesInput
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BezosRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BezosRequest_OneofMarshaler, _BezosRequest_OneofUnmarshaler, _BezosRequest_OneofSizer, []interface{}{
		(*BezosRequest_Cloudwatch_ListMetricsInput)(nil),
		(*BezosRequest_Cloudwatch_GetMetricStatisticsInput)(nil),
		(*BezosRequest_Cloudwatch_DescribeAlarmsInput)(nil),
		(*BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput)(nil),
		(*BezosRequest_Ec2_DescribeInstancesInput)(nil),
		(*BezosRequest_Ec2_DescribeSecurityGroupsInput)(nil),
		(*BezosRequest_Ec2_DescribeSubnetsInput)(nil),
		(*BezosRequest_Ec2_DescribeVpcsInput)(nil),
		(*BezosRequest_Ec2_DescribeRouteTablesInput)(nil),
		(*BezosRequest_Elb_DescribeLoadBalancersInput)(nil),
		(*BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput)(nil),
		(*BezosRequest_Rds_DescribeDBInstancesInput)(nil),
		(*BezosRequest_Ecs_ListTasksInput)(nil),
		(*BezosRequest_Ecs_DescribeTasksInput)(nil),
		(*BezosRequest_Ecs_DescribeContainerInstancesInput)(nil),
		(*BezosRequest_Ecs_ListClustersInput)(nil),
		(*BezosRequest_Ecs_ListServicesInput)(nil),
		(*BezosRequest_Ecs_DescribeServicesInput)(nil),
		(*BezosRequest_Ecs_ListContainerInstancesInput)(nil),
	}
}

func _BezosRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BezosRequest)
	// input
	switch x := m.Input.(type) {
	case *BezosRequest_Cloudwatch_ListMetricsInput:
		_ = b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_ListMetricsInput); err != nil {
			return err
		}
	case *BezosRequest_Cloudwatch_GetMetricStatisticsInput:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_GetMetricStatisticsInput); err != nil {
			return err
		}
	case *BezosRequest_Cloudwatch_DescribeAlarmsInput:
		_ = b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_DescribeAlarmsInput); err != nil {
			return err
		}
	case *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput:
		_ = b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_DescribeAlarmsForMetricInput); err != nil {
			return err
		}
	case *BezosRequest_Ec2_DescribeInstancesInput:
		_ = b.EncodeVarint(201<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeInstancesInput); err != nil {
			return err
		}
	case *BezosRequest_Ec2_DescribeSecurityGroupsInput:
		_ = b.EncodeVarint(202<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeSecurityGroupsInput); err != nil {
			return err
		}
	case *BezosRequest_Ec2_DescribeSubnetsInput:
		_ = b.EncodeVarint(203<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeSubnetsInput); err != nil {
			return err
		}
	case *BezosRequest_Ec2_DescribeVpcsInput:
		_ = b.EncodeVarint(204<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeVpcsInput); err != nil {
			return err
		}
	case *BezosRequest_Ec2_DescribeRouteTablesInput:
		_ = b.EncodeVarint(205<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeRouteTablesInput); err != nil {
			return err
		}
	case *BezosRequest_Elb_DescribeLoadBalancersInput:
		_ = b.EncodeVarint(301<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Elb_DescribeLoadBalancersInput); err != nil {
			return err
		}
	case *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput:
		_ = b.EncodeVarint(401<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Autoscaling_DescribeAutoScalingGroupsInput); err != nil {
			return err
		}
	case *BezosRequest_Rds_DescribeDBInstancesInput:
		_ = b.EncodeVarint(501<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rds_DescribeDBInstancesInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_ListTasksInput:
		_ = b.EncodeVarint(601<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListTasksInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_DescribeTasksInput:
		_ = b.EncodeVarint(602<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_DescribeTasksInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_DescribeContainerInstancesInput:
		_ = b.EncodeVarint(603<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_DescribeContainerInstancesInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_ListClustersInput:
		_ = b.EncodeVarint(604<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListClustersInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_ListServicesInput:
		_ = b.EncodeVarint(605<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListServicesInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_DescribeServicesInput:
		_ = b.EncodeVarint(606<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_DescribeServicesInput); err != nil {
			return err
		}
	case *BezosRequest_Ecs_ListContainerInstancesInput:
		_ = b.EncodeVarint(607<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListContainerInstancesInput); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BezosRequest.Input has unexpected type %T", x)
	}
	return nil
}

func _BezosRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BezosRequest)
	switch tag {
	case 101: // input.cloudwatch_ListMetricsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.ListMetricsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Cloudwatch_ListMetricsInput{msg}
		return true, err
	case 102: // input.cloudwatch_GetMetricStatisticsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.GetMetricStatisticsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Cloudwatch_GetMetricStatisticsInput{msg}
		return true, err
	case 103: // input.cloudwatch_DescribeAlarmsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.DescribeAlarmsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Cloudwatch_DescribeAlarmsInput{msg}
		return true, err
	case 104: // input.cloudwatch_DescribeAlarmsForMetricInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.DescribeAlarmsForMetricInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput{msg}
		return true, err
	case 201: // input.ec2_DescribeInstancesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeInstancesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ec2_DescribeInstancesInput{msg}
		return true, err
	case 202: // input.ec2_DescribeSecurityGroupsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeSecurityGroupsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ec2_DescribeSecurityGroupsInput{msg}
		return true, err
	case 203: // input.ec2_DescribeSubnetsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeSubnetsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ec2_DescribeSubnetsInput{msg}
		return true, err
	case 204: // input.ec2_DescribeVpcsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeVpcsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ec2_DescribeVpcsInput{msg}
		return true, err
	case 205: // input.ec2_DescribeRouteTablesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeRouteTablesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ec2_DescribeRouteTablesInput{msg}
		return true, err
	case 301: // input.elb_DescribeLoadBalancersInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_elb.DescribeLoadBalancersInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Elb_DescribeLoadBalancersInput{msg}
		return true, err
	case 401: // input.autoscaling_DescribeAutoScalingGroupsInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_autoscaling.DescribeAutoScalingGroupsInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput{msg}
		return true, err
	case 501: // input.rds_DescribeDBInstancesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_rds.DescribeDBInstancesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Rds_DescribeDBInstancesInput{msg}
		return true, err
	case 601: // input.ecs_ListTasksInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListTasksInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_ListTasksInput{msg}
		return true, err
	case 602: // input.ecs_DescribeTasksInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.DescribeTasksInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_DescribeTasksInput{msg}
		return true, err
	case 603: // input.ecs_DescribeContainerInstancesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.DescribeContainerInstancesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_DescribeContainerInstancesInput{msg}
		return true, err
	case 604: // input.ecs_ListClustersInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListClustersInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_ListClustersInput{msg}
		return true, err
	case 605: // input.ecs_ListServicesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListServicesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_ListServicesInput{msg}
		return true, err
	case 606: // input.ecs_DescribeServicesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.DescribeServicesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_DescribeServicesInput{msg}
		return true, err
	case 607: // input.ecs_ListContainerInstancesInput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListContainerInstancesInput)
		err := b.DecodeMessage(msg)
		m.Input = &BezosRequest_Ecs_ListContainerInstancesInput{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BezosRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BezosRequest)
	// input
	switch x := m.Input.(type) {
	case *BezosRequest_Cloudwatch_ListMetricsInput:
		s := proto.Size(x.Cloudwatch_ListMetricsInput)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Cloudwatch_GetMetricStatisticsInput:
		s := proto.Size(x.Cloudwatch_GetMetricStatisticsInput)
		n += proto.SizeVarint(102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Cloudwatch_DescribeAlarmsInput:
		s := proto.Size(x.Cloudwatch_DescribeAlarmsInput)
		n += proto.SizeVarint(103<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput:
		s := proto.Size(x.Cloudwatch_DescribeAlarmsForMetricInput)
		n += proto.SizeVarint(104<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ec2_DescribeInstancesInput:
		s := proto.Size(x.Ec2_DescribeInstancesInput)
		n += proto.SizeVarint(201<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ec2_DescribeSecurityGroupsInput:
		s := proto.Size(x.Ec2_DescribeSecurityGroupsInput)
		n += proto.SizeVarint(202<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ec2_DescribeSubnetsInput:
		s := proto.Size(x.Ec2_DescribeSubnetsInput)
		n += proto.SizeVarint(203<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ec2_DescribeVpcsInput:
		s := proto.Size(x.Ec2_DescribeVpcsInput)
		n += proto.SizeVarint(204<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ec2_DescribeRouteTablesInput:
		s := proto.Size(x.Ec2_DescribeRouteTablesInput)
		n += proto.SizeVarint(205<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Elb_DescribeLoadBalancersInput:
		s := proto.Size(x.Elb_DescribeLoadBalancersInput)
		n += proto.SizeVarint(301<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput:
		s := proto.Size(x.Autoscaling_DescribeAutoScalingGroupsInput)
		n += proto.SizeVarint(401<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Rds_DescribeDBInstancesInput:
		s := proto.Size(x.Rds_DescribeDBInstancesInput)
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_ListTasksInput:
		s := proto.Size(x.Ecs_ListTasksInput)
		n += proto.SizeVarint(601<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_DescribeTasksInput:
		s := proto.Size(x.Ecs_DescribeTasksInput)
		n += proto.SizeVarint(602<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_DescribeContainerInstancesInput:
		s := proto.Size(x.Ecs_DescribeContainerInstancesInput)
		n += proto.SizeVarint(603<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_ListClustersInput:
		s := proto.Size(x.Ecs_ListClustersInput)
		n += proto.SizeVarint(604<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_ListServicesInput:
		s := proto.Size(x.Ecs_ListServicesInput)
		n += proto.SizeVarint(605<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_DescribeServicesInput:
		s := proto.Size(x.Ecs_DescribeServicesInput)
		n += proto.SizeVarint(606<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosRequest_Ecs_ListContainerInstancesInput:
		s := proto.Size(x.Ecs_ListContainerInstancesInput)
		n += proto.SizeVarint(607<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BezosResponse struct {
	LastModified *opsee_types.Timestamp `protobuf:"bytes,1,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	// Types that are valid to be assigned to Output:
	//	*BezosResponse_Cloudwatch_ListMetricsOutput
	//	*BezosResponse_Cloudwatch_GetMetricStatisticsOutput
	//	*BezosResponse_Cloudwatch_DescribeAlarmsOutput
	//	*BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput
	//	*BezosResponse_Ec2_DescribeInstancesOutput
	//	*BezosResponse_Ec2_DescribeSecurityGroupsOutput
	//	*BezosResponse_Ec2_DescribeSubnetsOutput
	//	*BezosResponse_Ec2_DescribeVpcsOutput
	//	*BezosResponse_Ec2_DescribeRouteTablesOutput
	//	*BezosResponse_Elb_DescribeLoadBalancersOutput
	//	*BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput
	//	*BezosResponse_Rds_DescribeDBInstancesOutput
	//	*BezosResponse_Ecs_ListTasksOutput
	//	*BezosResponse_Ecs_DescribeTasksOutput
	//	*BezosResponse_Ecs_DescribeContainerInstancesOutput
	//	*BezosResponse_Ecs_ListClustersOutput
	//	*BezosResponse_Ecs_ListServicesOutput
	//	*BezosResponse_Ecs_DescribeServicesOutput
	//	*BezosResponse_Ecs_ListContainerInstancesOutput
	Output isBezosResponse_Output `protobuf_oneof:"output"`
}

func (m *BezosResponse) Reset()                    { *m = BezosResponse{} }
func (m *BezosResponse) String() string            { return proto.CompactTextString(m) }
func (*BezosResponse) ProtoMessage()               {}
func (*BezosResponse) Descriptor() ([]byte, []int) { return fileDescriptorBezos, []int{1} }

type isBezosResponse_Output interface {
	isBezosResponse_Output()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type BezosResponse_Cloudwatch_ListMetricsOutput struct {
	Cloudwatch_ListMetricsOutput *opsee_aws_cloudwatch.ListMetricsOutput `protobuf:"bytes,101,opt,name=cloudwatch_ListMetricsOutput,json=cloudwatchListMetricsOutput,oneof"`
}
type BezosResponse_Cloudwatch_GetMetricStatisticsOutput struct {
	Cloudwatch_GetMetricStatisticsOutput *opsee_aws_cloudwatch.GetMetricStatisticsOutput `protobuf:"bytes,102,opt,name=cloudwatch_GetMetricStatisticsOutput,json=cloudwatchGetMetricStatisticsOutput,oneof"`
}
type BezosResponse_Cloudwatch_DescribeAlarmsOutput struct {
	Cloudwatch_DescribeAlarmsOutput *opsee_aws_cloudwatch.DescribeAlarmsOutput `protobuf:"bytes,103,opt,name=cloudwatch_DescribeAlarmsOutput,json=cloudwatchDescribeAlarmsOutput,oneof"`
}
type BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput struct {
	Cloudwatch_DescribeAlarmsForMetricOutput *opsee_aws_cloudwatch.DescribeAlarmsForMetricOutput `protobuf:"bytes,104,opt,name=cloudwatch_DescribeAlarmsForMetricOutput,json=cloudwatchDescribeAlarmsForMetricOutput,oneof"`
}
type BezosResponse_Ec2_DescribeInstancesOutput struct {
	Ec2_DescribeInstancesOutput *opsee_aws_ec2.DescribeInstancesOutput `protobuf:"bytes,201,opt,name=ec2_DescribeInstancesOutput,json=ec2DescribeInstancesOutput,oneof"`
}
type BezosResponse_Ec2_DescribeSecurityGroupsOutput struct {
	Ec2_DescribeSecurityGroupsOutput *opsee_aws_ec2.DescribeSecurityGroupsOutput `protobuf:"bytes,202,opt,name=ec2_DescribeSecurityGroupsOutput,json=ec2DescribeSecurityGroupsOutput,oneof"`
}
type BezosResponse_Ec2_DescribeSubnetsOutput struct {
	Ec2_DescribeSubnetsOutput *opsee_aws_ec2.DescribeSubnetsOutput `protobuf:"bytes,203,opt,name=ec2_DescribeSubnetsOutput,json=ec2DescribeSubnetsOutput,oneof"`
}
type BezosResponse_Ec2_DescribeVpcsOutput struct {
	Ec2_DescribeVpcsOutput *opsee_aws_ec2.DescribeVpcsOutput `protobuf:"bytes,204,opt,name=ec2_DescribeVpcsOutput,json=ec2DescribeVpcsOutput,oneof"`
}
type BezosResponse_Ec2_DescribeRouteTablesOutput struct {
	Ec2_DescribeRouteTablesOutput *opsee_aws_ec2.DescribeRouteTablesOutput `protobuf:"bytes,205,opt,name=ec2_DescribeRouteTablesOutput,json=ec2DescribeRouteTablesOutput,oneof"`
}
type BezosResponse_Elb_DescribeLoadBalancersOutput struct {
	Elb_DescribeLoadBalancersOutput *opsee_aws_elb.DescribeLoadBalancersOutput `protobuf:"bytes,301,opt,name=elb_DescribeLoadBalancersOutput,json=elbDescribeLoadBalancersOutput,oneof"`
}
type BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput struct {
	Autoscaling_DescribeAutoScalingGroupsOutput *opsee_aws_autoscaling.DescribeAutoScalingGroupsOutput `protobuf:"bytes,401,opt,name=autoscaling_DescribeAutoScalingGroupsOutput,json=autoscalingDescribeAutoScalingGroupsOutput,oneof"`
}
type BezosResponse_Rds_DescribeDBInstancesOutput struct {
	Rds_DescribeDBInstancesOutput *opsee_aws_rds.DescribeDBInstancesOutput `protobuf:"bytes,501,opt,name=rds_DescribeDBInstancesOutput,json=rdsDescribeDBInstancesOutput,oneof"`
}
type BezosResponse_Ecs_ListTasksOutput struct {
	Ecs_ListTasksOutput *opsee_aws_ecs.ListTasksOutput `protobuf:"bytes,601,opt,name=ecs_ListTasksOutput,json=ecsListTasksOutput,oneof"`
}
type BezosResponse_Ecs_DescribeTasksOutput struct {
	Ecs_DescribeTasksOutput *opsee_aws_ecs.DescribeTasksOutput `protobuf:"bytes,602,opt,name=ecs_DescribeTasksOutput,json=ecsDescribeTasksOutput,oneof"`
}
type BezosResponse_Ecs_DescribeContainerInstancesOutput struct {
	Ecs_DescribeContainerInstancesOutput *opsee_aws_ecs.DescribeContainerInstancesOutput `protobuf:"bytes,603,opt,name=ecs_DescribeContainerInstancesOutput,json=ecsDescribeContainerInstancesOutput,oneof"`
}
type BezosResponse_Ecs_ListClustersOutput struct {
	Ecs_ListClustersOutput *opsee_aws_ecs.ListClustersOutput `protobuf:"bytes,604,opt,name=ecs_ListClustersOutput,json=ecsListClustersOutput,oneof"`
}
type BezosResponse_Ecs_ListServicesOutput struct {
	Ecs_ListServicesOutput *opsee_aws_ecs.ListServicesOutput `protobuf:"bytes,605,opt,name=ecs_ListServicesOutput,json=ecsListServicesOutput,oneof"`
}
type BezosResponse_Ecs_DescribeServicesOutput struct {
	Ecs_DescribeServicesOutput *opsee_aws_ecs.DescribeServicesOutput `protobuf:"bytes,606,opt,name=ecs_DescribeServicesOutput,json=ecsDescribeServicesOutput,oneof"`
}
type BezosResponse_Ecs_ListContainerInstancesOutput struct {
	Ecs_ListContainerInstancesOutput *opsee_aws_ecs.ListContainerInstancesOutput `protobuf:"bytes,607,opt,name=ecs_ListContainerInstancesOutput,json=ecsListContainerInstancesOutput,oneof"`
}

func (*BezosResponse_Cloudwatch_ListMetricsOutput) isBezosResponse_Output()                {}
func (*BezosResponse_Cloudwatch_GetMetricStatisticsOutput) isBezosResponse_Output()        {}
func (*BezosResponse_Cloudwatch_DescribeAlarmsOutput) isBezosResponse_Output()             {}
func (*BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput) isBezosResponse_Output()    {}
func (*BezosResponse_Ec2_DescribeInstancesOutput) isBezosResponse_Output()                 {}
func (*BezosResponse_Ec2_DescribeSecurityGroupsOutput) isBezosResponse_Output()            {}
func (*BezosResponse_Ec2_DescribeSubnetsOutput) isBezosResponse_Output()                   {}
func (*BezosResponse_Ec2_DescribeVpcsOutput) isBezosResponse_Output()                      {}
func (*BezosResponse_Ec2_DescribeRouteTablesOutput) isBezosResponse_Output()               {}
func (*BezosResponse_Elb_DescribeLoadBalancersOutput) isBezosResponse_Output()             {}
func (*BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput) isBezosResponse_Output() {}
func (*BezosResponse_Rds_DescribeDBInstancesOutput) isBezosResponse_Output()               {}
func (*BezosResponse_Ecs_ListTasksOutput) isBezosResponse_Output()                         {}
func (*BezosResponse_Ecs_DescribeTasksOutput) isBezosResponse_Output()                     {}
func (*BezosResponse_Ecs_DescribeContainerInstancesOutput) isBezosResponse_Output()        {}
func (*BezosResponse_Ecs_ListClustersOutput) isBezosResponse_Output()                      {}
func (*BezosResponse_Ecs_ListServicesOutput) isBezosResponse_Output()                      {}
func (*BezosResponse_Ecs_DescribeServicesOutput) isBezosResponse_Output()                  {}
func (*BezosResponse_Ecs_ListContainerInstancesOutput) isBezosResponse_Output()            {}

func (m *BezosResponse) GetOutput() isBezosResponse_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *BezosResponse) GetLastModified() *opsee_types.Timestamp {
	if m != nil {
		return m.LastModified
	}
	return nil
}

func (m *BezosResponse) GetCloudwatch_ListMetricsOutput() *opsee_aws_cloudwatch.ListMetricsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Cloudwatch_ListMetricsOutput); ok {
		return x.Cloudwatch_ListMetricsOutput
	}
	return nil
}

func (m *BezosResponse) GetCloudwatch_GetMetricStatisticsOutput() *opsee_aws_cloudwatch.GetMetricStatisticsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Cloudwatch_GetMetricStatisticsOutput); ok {
		return x.Cloudwatch_GetMetricStatisticsOutput
	}
	return nil
}

func (m *BezosResponse) GetCloudwatch_DescribeAlarmsOutput() *opsee_aws_cloudwatch.DescribeAlarmsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Cloudwatch_DescribeAlarmsOutput); ok {
		return x.Cloudwatch_DescribeAlarmsOutput
	}
	return nil
}

func (m *BezosResponse) GetCloudwatch_DescribeAlarmsForMetricOutput() *opsee_aws_cloudwatch.DescribeAlarmsForMetricOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput); ok {
		return x.Cloudwatch_DescribeAlarmsForMetricOutput
	}
	return nil
}

func (m *BezosResponse) GetEc2_DescribeInstancesOutput() *opsee_aws_ec2.DescribeInstancesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ec2_DescribeInstancesOutput); ok {
		return x.Ec2_DescribeInstancesOutput
	}
	return nil
}

func (m *BezosResponse) GetEc2_DescribeSecurityGroupsOutput() *opsee_aws_ec2.DescribeSecurityGroupsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ec2_DescribeSecurityGroupsOutput); ok {
		return x.Ec2_DescribeSecurityGroupsOutput
	}
	return nil
}

func (m *BezosResponse) GetEc2_DescribeSubnetsOutput() *opsee_aws_ec2.DescribeSubnetsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ec2_DescribeSubnetsOutput); ok {
		return x.Ec2_DescribeSubnetsOutput
	}
	return nil
}

func (m *BezosResponse) GetEc2_DescribeVpcsOutput() *opsee_aws_ec2.DescribeVpcsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ec2_DescribeVpcsOutput); ok {
		return x.Ec2_DescribeVpcsOutput
	}
	return nil
}

func (m *BezosResponse) GetEc2_DescribeRouteTablesOutput() *opsee_aws_ec2.DescribeRouteTablesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ec2_DescribeRouteTablesOutput); ok {
		return x.Ec2_DescribeRouteTablesOutput
	}
	return nil
}

func (m *BezosResponse) GetElb_DescribeLoadBalancersOutput() *opsee_aws_elb.DescribeLoadBalancersOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Elb_DescribeLoadBalancersOutput); ok {
		return x.Elb_DescribeLoadBalancersOutput
	}
	return nil
}

func (m *BezosResponse) GetAutoscaling_DescribeAutoScalingGroupsOutput() *opsee_aws_autoscaling.DescribeAutoScalingGroupsOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput); ok {
		return x.Autoscaling_DescribeAutoScalingGroupsOutput
	}
	return nil
}

func (m *BezosResponse) GetRds_DescribeDBInstancesOutput() *opsee_aws_rds.DescribeDBInstancesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Rds_DescribeDBInstancesOutput); ok {
		return x.Rds_DescribeDBInstancesOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_ListTasksOutput() *opsee_aws_ecs.ListTasksOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_ListTasksOutput); ok {
		return x.Ecs_ListTasksOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_DescribeTasksOutput() *opsee_aws_ecs.DescribeTasksOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_DescribeTasksOutput); ok {
		return x.Ecs_DescribeTasksOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_DescribeContainerInstancesOutput() *opsee_aws_ecs.DescribeContainerInstancesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_DescribeContainerInstancesOutput); ok {
		return x.Ecs_DescribeContainerInstancesOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_ListClustersOutput() *opsee_aws_ecs.ListClustersOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_ListClustersOutput); ok {
		return x.Ecs_ListClustersOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_ListServicesOutput() *opsee_aws_ecs.ListServicesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_ListServicesOutput); ok {
		return x.Ecs_ListServicesOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_DescribeServicesOutput() *opsee_aws_ecs.DescribeServicesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_DescribeServicesOutput); ok {
		return x.Ecs_DescribeServicesOutput
	}
	return nil
}

func (m *BezosResponse) GetEcs_ListContainerInstancesOutput() *opsee_aws_ecs.ListContainerInstancesOutput {
	if x, ok := m.GetOutput().(*BezosResponse_Ecs_ListContainerInstancesOutput); ok {
		return x.Ecs_ListContainerInstancesOutput
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BezosResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BezosResponse_OneofMarshaler, _BezosResponse_OneofUnmarshaler, _BezosResponse_OneofSizer, []interface{}{
		(*BezosResponse_Cloudwatch_ListMetricsOutput)(nil),
		(*BezosResponse_Cloudwatch_GetMetricStatisticsOutput)(nil),
		(*BezosResponse_Cloudwatch_DescribeAlarmsOutput)(nil),
		(*BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput)(nil),
		(*BezosResponse_Ec2_DescribeInstancesOutput)(nil),
		(*BezosResponse_Ec2_DescribeSecurityGroupsOutput)(nil),
		(*BezosResponse_Ec2_DescribeSubnetsOutput)(nil),
		(*BezosResponse_Ec2_DescribeVpcsOutput)(nil),
		(*BezosResponse_Ec2_DescribeRouteTablesOutput)(nil),
		(*BezosResponse_Elb_DescribeLoadBalancersOutput)(nil),
		(*BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput)(nil),
		(*BezosResponse_Rds_DescribeDBInstancesOutput)(nil),
		(*BezosResponse_Ecs_ListTasksOutput)(nil),
		(*BezosResponse_Ecs_DescribeTasksOutput)(nil),
		(*BezosResponse_Ecs_DescribeContainerInstancesOutput)(nil),
		(*BezosResponse_Ecs_ListClustersOutput)(nil),
		(*BezosResponse_Ecs_ListServicesOutput)(nil),
		(*BezosResponse_Ecs_DescribeServicesOutput)(nil),
		(*BezosResponse_Ecs_ListContainerInstancesOutput)(nil),
	}
}

func _BezosResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BezosResponse)
	// output
	switch x := m.Output.(type) {
	case *BezosResponse_Cloudwatch_ListMetricsOutput:
		_ = b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_ListMetricsOutput); err != nil {
			return err
		}
	case *BezosResponse_Cloudwatch_GetMetricStatisticsOutput:
		_ = b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_GetMetricStatisticsOutput); err != nil {
			return err
		}
	case *BezosResponse_Cloudwatch_DescribeAlarmsOutput:
		_ = b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_DescribeAlarmsOutput); err != nil {
			return err
		}
	case *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput:
		_ = b.EncodeVarint(104<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cloudwatch_DescribeAlarmsForMetricOutput); err != nil {
			return err
		}
	case *BezosResponse_Ec2_DescribeInstancesOutput:
		_ = b.EncodeVarint(201<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeInstancesOutput); err != nil {
			return err
		}
	case *BezosResponse_Ec2_DescribeSecurityGroupsOutput:
		_ = b.EncodeVarint(202<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeSecurityGroupsOutput); err != nil {
			return err
		}
	case *BezosResponse_Ec2_DescribeSubnetsOutput:
		_ = b.EncodeVarint(203<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeSubnetsOutput); err != nil {
			return err
		}
	case *BezosResponse_Ec2_DescribeVpcsOutput:
		_ = b.EncodeVarint(204<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeVpcsOutput); err != nil {
			return err
		}
	case *BezosResponse_Ec2_DescribeRouteTablesOutput:
		_ = b.EncodeVarint(205<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ec2_DescribeRouteTablesOutput); err != nil {
			return err
		}
	case *BezosResponse_Elb_DescribeLoadBalancersOutput:
		_ = b.EncodeVarint(301<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Elb_DescribeLoadBalancersOutput); err != nil {
			return err
		}
	case *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput:
		_ = b.EncodeVarint(401<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Autoscaling_DescribeAutoScalingGroupsOutput); err != nil {
			return err
		}
	case *BezosResponse_Rds_DescribeDBInstancesOutput:
		_ = b.EncodeVarint(501<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rds_DescribeDBInstancesOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_ListTasksOutput:
		_ = b.EncodeVarint(601<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListTasksOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_DescribeTasksOutput:
		_ = b.EncodeVarint(602<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_DescribeTasksOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_DescribeContainerInstancesOutput:
		_ = b.EncodeVarint(603<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_DescribeContainerInstancesOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_ListClustersOutput:
		_ = b.EncodeVarint(604<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListClustersOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_ListServicesOutput:
		_ = b.EncodeVarint(605<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListServicesOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_DescribeServicesOutput:
		_ = b.EncodeVarint(606<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_DescribeServicesOutput); err != nil {
			return err
		}
	case *BezosResponse_Ecs_ListContainerInstancesOutput:
		_ = b.EncodeVarint(607<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ecs_ListContainerInstancesOutput); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BezosResponse.Output has unexpected type %T", x)
	}
	return nil
}

func _BezosResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BezosResponse)
	switch tag {
	case 101: // output.cloudwatch_ListMetricsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.ListMetricsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Cloudwatch_ListMetricsOutput{msg}
		return true, err
	case 102: // output.cloudwatch_GetMetricStatisticsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.GetMetricStatisticsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Cloudwatch_GetMetricStatisticsOutput{msg}
		return true, err
	case 103: // output.cloudwatch_DescribeAlarmsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.DescribeAlarmsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Cloudwatch_DescribeAlarmsOutput{msg}
		return true, err
	case 104: // output.cloudwatch_DescribeAlarmsForMetricOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_cloudwatch.DescribeAlarmsForMetricOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput{msg}
		return true, err
	case 201: // output.ec2_DescribeInstancesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeInstancesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ec2_DescribeInstancesOutput{msg}
		return true, err
	case 202: // output.ec2_DescribeSecurityGroupsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeSecurityGroupsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ec2_DescribeSecurityGroupsOutput{msg}
		return true, err
	case 203: // output.ec2_DescribeSubnetsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeSubnetsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ec2_DescribeSubnetsOutput{msg}
		return true, err
	case 204: // output.ec2_DescribeVpcsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeVpcsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ec2_DescribeVpcsOutput{msg}
		return true, err
	case 205: // output.ec2_DescribeRouteTablesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ec2.DescribeRouteTablesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ec2_DescribeRouteTablesOutput{msg}
		return true, err
	case 301: // output.elb_DescribeLoadBalancersOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_elb.DescribeLoadBalancersOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Elb_DescribeLoadBalancersOutput{msg}
		return true, err
	case 401: // output.autoscaling_DescribeAutoScalingGroupsOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_autoscaling.DescribeAutoScalingGroupsOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput{msg}
		return true, err
	case 501: // output.rds_DescribeDBInstancesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_rds.DescribeDBInstancesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Rds_DescribeDBInstancesOutput{msg}
		return true, err
	case 601: // output.ecs_ListTasksOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListTasksOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_ListTasksOutput{msg}
		return true, err
	case 602: // output.ecs_DescribeTasksOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.DescribeTasksOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_DescribeTasksOutput{msg}
		return true, err
	case 603: // output.ecs_DescribeContainerInstancesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.DescribeContainerInstancesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_DescribeContainerInstancesOutput{msg}
		return true, err
	case 604: // output.ecs_ListClustersOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListClustersOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_ListClustersOutput{msg}
		return true, err
	case 605: // output.ecs_ListServicesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListServicesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_ListServicesOutput{msg}
		return true, err
	case 606: // output.ecs_DescribeServicesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.DescribeServicesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_DescribeServicesOutput{msg}
		return true, err
	case 607: // output.ecs_ListContainerInstancesOutput
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(opsee_aws_ecs.ListContainerInstancesOutput)
		err := b.DecodeMessage(msg)
		m.Output = &BezosResponse_Ecs_ListContainerInstancesOutput{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BezosResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BezosResponse)
	// output
	switch x := m.Output.(type) {
	case *BezosResponse_Cloudwatch_ListMetricsOutput:
		s := proto.Size(x.Cloudwatch_ListMetricsOutput)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Cloudwatch_GetMetricStatisticsOutput:
		s := proto.Size(x.Cloudwatch_GetMetricStatisticsOutput)
		n += proto.SizeVarint(102<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Cloudwatch_DescribeAlarmsOutput:
		s := proto.Size(x.Cloudwatch_DescribeAlarmsOutput)
		n += proto.SizeVarint(103<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput:
		s := proto.Size(x.Cloudwatch_DescribeAlarmsForMetricOutput)
		n += proto.SizeVarint(104<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ec2_DescribeInstancesOutput:
		s := proto.Size(x.Ec2_DescribeInstancesOutput)
		n += proto.SizeVarint(201<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ec2_DescribeSecurityGroupsOutput:
		s := proto.Size(x.Ec2_DescribeSecurityGroupsOutput)
		n += proto.SizeVarint(202<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ec2_DescribeSubnetsOutput:
		s := proto.Size(x.Ec2_DescribeSubnetsOutput)
		n += proto.SizeVarint(203<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ec2_DescribeVpcsOutput:
		s := proto.Size(x.Ec2_DescribeVpcsOutput)
		n += proto.SizeVarint(204<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ec2_DescribeRouteTablesOutput:
		s := proto.Size(x.Ec2_DescribeRouteTablesOutput)
		n += proto.SizeVarint(205<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Elb_DescribeLoadBalancersOutput:
		s := proto.Size(x.Elb_DescribeLoadBalancersOutput)
		n += proto.SizeVarint(301<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput:
		s := proto.Size(x.Autoscaling_DescribeAutoScalingGroupsOutput)
		n += proto.SizeVarint(401<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Rds_DescribeDBInstancesOutput:
		s := proto.Size(x.Rds_DescribeDBInstancesOutput)
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_ListTasksOutput:
		s := proto.Size(x.Ecs_ListTasksOutput)
		n += proto.SizeVarint(601<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_DescribeTasksOutput:
		s := proto.Size(x.Ecs_DescribeTasksOutput)
		n += proto.SizeVarint(602<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_DescribeContainerInstancesOutput:
		s := proto.Size(x.Ecs_DescribeContainerInstancesOutput)
		n += proto.SizeVarint(603<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_ListClustersOutput:
		s := proto.Size(x.Ecs_ListClustersOutput)
		n += proto.SizeVarint(604<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_ListServicesOutput:
		s := proto.Size(x.Ecs_ListServicesOutput)
		n += proto.SizeVarint(605<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_DescribeServicesOutput:
		s := proto.Size(x.Ecs_DescribeServicesOutput)
		n += proto.SizeVarint(606<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BezosResponse_Ecs_ListContainerInstancesOutput:
		s := proto.Size(x.Ecs_ListContainerInstancesOutput)
		n += proto.SizeVarint(607<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*BezosRequest)(nil), "opsee.BezosRequest")
	proto.RegisterType((*BezosResponse)(nil), "opsee.BezosResponse")
}
func (this *BezosRequest) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest)
	if !ok {
		that2, ok := that.(BezosRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.User.Equal(that1.User) {
		return false
	}
	if this.Region != that1.Region {
		return false
	}
	if this.VpcId != that1.VpcId {
		return false
	}
	if !this.MaxAge.Equal(that1.MaxAge) {
		return false
	}
	if that1.Input == nil {
		if this.Input != nil {
			return false
		}
	} else if this.Input == nil {
		return false
	} else if !this.Input.Equal(that1.Input) {
		return false
	}
	return true
}
func (this *BezosRequest_Cloudwatch_ListMetricsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Cloudwatch_ListMetricsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Cloudwatch_ListMetricsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_ListMetricsInput.Equal(that1.Cloudwatch_ListMetricsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Cloudwatch_GetMetricStatisticsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Cloudwatch_GetMetricStatisticsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Cloudwatch_GetMetricStatisticsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_GetMetricStatisticsInput.Equal(that1.Cloudwatch_GetMetricStatisticsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Cloudwatch_DescribeAlarmsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Cloudwatch_DescribeAlarmsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Cloudwatch_DescribeAlarmsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_DescribeAlarmsInput.Equal(that1.Cloudwatch_DescribeAlarmsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput)
	if !ok {
		that2, ok := that.(BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_DescribeAlarmsForMetricInput.Equal(that1.Cloudwatch_DescribeAlarmsForMetricInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ec2_DescribeInstancesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ec2_DescribeInstancesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ec2_DescribeInstancesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeInstancesInput.Equal(that1.Ec2_DescribeInstancesInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ec2_DescribeSecurityGroupsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ec2_DescribeSecurityGroupsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ec2_DescribeSecurityGroupsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeSecurityGroupsInput.Equal(that1.Ec2_DescribeSecurityGroupsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ec2_DescribeSubnetsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ec2_DescribeSubnetsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ec2_DescribeSubnetsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeSubnetsInput.Equal(that1.Ec2_DescribeSubnetsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ec2_DescribeVpcsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ec2_DescribeVpcsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ec2_DescribeVpcsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeVpcsInput.Equal(that1.Ec2_DescribeVpcsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ec2_DescribeRouteTablesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ec2_DescribeRouteTablesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ec2_DescribeRouteTablesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeRouteTablesInput.Equal(that1.Ec2_DescribeRouteTablesInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Elb_DescribeLoadBalancersInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Elb_DescribeLoadBalancersInput)
	if !ok {
		that2, ok := that.(BezosRequest_Elb_DescribeLoadBalancersInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Elb_DescribeLoadBalancersInput.Equal(that1.Elb_DescribeLoadBalancersInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput)
	if !ok {
		that2, ok := that.(BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Autoscaling_DescribeAutoScalingGroupsInput.Equal(that1.Autoscaling_DescribeAutoScalingGroupsInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Rds_DescribeDBInstancesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Rds_DescribeDBInstancesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Rds_DescribeDBInstancesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Rds_DescribeDBInstancesInput.Equal(that1.Rds_DescribeDBInstancesInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_ListTasksInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_ListTasksInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_ListTasksInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListTasksInput.Equal(that1.Ecs_ListTasksInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_DescribeTasksInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_DescribeTasksInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_DescribeTasksInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_DescribeTasksInput.Equal(that1.Ecs_DescribeTasksInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_DescribeContainerInstancesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_DescribeContainerInstancesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_DescribeContainerInstancesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_DescribeContainerInstancesInput.Equal(that1.Ecs_DescribeContainerInstancesInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_ListClustersInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_ListClustersInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_ListClustersInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListClustersInput.Equal(that1.Ecs_ListClustersInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_ListServicesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_ListServicesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_ListServicesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListServicesInput.Equal(that1.Ecs_ListServicesInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_DescribeServicesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_DescribeServicesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_DescribeServicesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_DescribeServicesInput.Equal(that1.Ecs_DescribeServicesInput) {
		return false
	}
	return true
}
func (this *BezosRequest_Ecs_ListContainerInstancesInput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosRequest_Ecs_ListContainerInstancesInput)
	if !ok {
		that2, ok := that.(BezosRequest_Ecs_ListContainerInstancesInput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListContainerInstancesInput.Equal(that1.Ecs_ListContainerInstancesInput) {
		return false
	}
	return true
}
func (this *BezosResponse) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse)
	if !ok {
		that2, ok := that.(BezosResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.LastModified.Equal(that1.LastModified) {
		return false
	}
	if that1.Output == nil {
		if this.Output != nil {
			return false
		}
	} else if this.Output == nil {
		return false
	} else if !this.Output.Equal(that1.Output) {
		return false
	}
	return true
}
func (this *BezosResponse_Cloudwatch_ListMetricsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Cloudwatch_ListMetricsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Cloudwatch_ListMetricsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_ListMetricsOutput.Equal(that1.Cloudwatch_ListMetricsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Cloudwatch_GetMetricStatisticsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Cloudwatch_GetMetricStatisticsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Cloudwatch_GetMetricStatisticsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_GetMetricStatisticsOutput.Equal(that1.Cloudwatch_GetMetricStatisticsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Cloudwatch_DescribeAlarmsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Cloudwatch_DescribeAlarmsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Cloudwatch_DescribeAlarmsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_DescribeAlarmsOutput.Equal(that1.Cloudwatch_DescribeAlarmsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Cloudwatch_DescribeAlarmsForMetricOutput.Equal(that1.Cloudwatch_DescribeAlarmsForMetricOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ec2_DescribeInstancesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ec2_DescribeInstancesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ec2_DescribeInstancesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeInstancesOutput.Equal(that1.Ec2_DescribeInstancesOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ec2_DescribeSecurityGroupsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ec2_DescribeSecurityGroupsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ec2_DescribeSecurityGroupsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeSecurityGroupsOutput.Equal(that1.Ec2_DescribeSecurityGroupsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ec2_DescribeSubnetsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ec2_DescribeSubnetsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ec2_DescribeSubnetsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeSubnetsOutput.Equal(that1.Ec2_DescribeSubnetsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ec2_DescribeVpcsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ec2_DescribeVpcsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ec2_DescribeVpcsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeVpcsOutput.Equal(that1.Ec2_DescribeVpcsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ec2_DescribeRouteTablesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ec2_DescribeRouteTablesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ec2_DescribeRouteTablesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ec2_DescribeRouteTablesOutput.Equal(that1.Ec2_DescribeRouteTablesOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Elb_DescribeLoadBalancersOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Elb_DescribeLoadBalancersOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Elb_DescribeLoadBalancersOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Elb_DescribeLoadBalancersOutput.Equal(that1.Elb_DescribeLoadBalancersOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Autoscaling_DescribeAutoScalingGroupsOutput.Equal(that1.Autoscaling_DescribeAutoScalingGroupsOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Rds_DescribeDBInstancesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Rds_DescribeDBInstancesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Rds_DescribeDBInstancesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Rds_DescribeDBInstancesOutput.Equal(that1.Rds_DescribeDBInstancesOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_ListTasksOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_ListTasksOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_ListTasksOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListTasksOutput.Equal(that1.Ecs_ListTasksOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_DescribeTasksOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_DescribeTasksOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_DescribeTasksOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_DescribeTasksOutput.Equal(that1.Ecs_DescribeTasksOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_DescribeContainerInstancesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_DescribeContainerInstancesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_DescribeContainerInstancesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_DescribeContainerInstancesOutput.Equal(that1.Ecs_DescribeContainerInstancesOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_ListClustersOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_ListClustersOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_ListClustersOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListClustersOutput.Equal(that1.Ecs_ListClustersOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_ListServicesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_ListServicesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_ListServicesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListServicesOutput.Equal(that1.Ecs_ListServicesOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_DescribeServicesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_DescribeServicesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_DescribeServicesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_DescribeServicesOutput.Equal(that1.Ecs_DescribeServicesOutput) {
		return false
	}
	return true
}
func (this *BezosResponse_Ecs_ListContainerInstancesOutput) Equal(that interface{}) bool {
	if that == nil {
		if this == nil {
			return true
		}
		return false
	}

	that1, ok := that.(*BezosResponse_Ecs_ListContainerInstancesOutput)
	if !ok {
		that2, ok := that.(BezosResponse_Ecs_ListContainerInstancesOutput)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		if this == nil {
			return true
		}
		return false
	} else if this == nil {
		return false
	}
	if !this.Ecs_ListContainerInstancesOutput.Equal(that1.Ecs_ListContainerInstancesOutput) {
		return false
	}
	return true
}

type BezosRequestGetter interface {
	GetBezosRequest() *BezosRequest
}

var GraphQLBezosRequestType *github_com_graphql_go_graphql.Object
var GraphQLBezosRequestInputUnion *github_com_graphql_go_graphql.Union

type BezosResponseGetter interface {
	GetBezosResponse() *BezosResponse
}

var GraphQLBezosResponseType *github_com_graphql_go_graphql.Object
var GraphQLBezosResponseOutputUnion *github_com_graphql_go_graphql.Union

func (g *BezosRequest_Cloudwatch_ListMetricsInput) GetListMetricsInput() *opsee_aws_cloudwatch.ListMetricsInput {
	return g.Cloudwatch_ListMetricsInput
}
func (g *BezosRequest_Cloudwatch_GetMetricStatisticsInput) GetGetMetricStatisticsInput() *opsee_aws_cloudwatch.GetMetricStatisticsInput {
	return g.Cloudwatch_GetMetricStatisticsInput
}
func (g *BezosRequest_Cloudwatch_DescribeAlarmsInput) GetDescribeAlarmsInput() *opsee_aws_cloudwatch.DescribeAlarmsInput {
	return g.Cloudwatch_DescribeAlarmsInput
}
func (g *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput) GetDescribeAlarmsForMetricInput() *opsee_aws_cloudwatch.DescribeAlarmsForMetricInput {
	return g.Cloudwatch_DescribeAlarmsForMetricInput
}
func (g *BezosRequest_Ec2_DescribeInstancesInput) GetDescribeInstancesInput() *opsee_aws_ec2.DescribeInstancesInput {
	return g.Ec2_DescribeInstancesInput
}
func (g *BezosRequest_Ec2_DescribeSecurityGroupsInput) GetDescribeSecurityGroupsInput() *opsee_aws_ec2.DescribeSecurityGroupsInput {
	return g.Ec2_DescribeSecurityGroupsInput
}
func (g *BezosRequest_Ec2_DescribeSubnetsInput) GetDescribeSubnetsInput() *opsee_aws_ec2.DescribeSubnetsInput {
	return g.Ec2_DescribeSubnetsInput
}
func (g *BezosRequest_Ec2_DescribeVpcsInput) GetDescribeVpcsInput() *opsee_aws_ec2.DescribeVpcsInput {
	return g.Ec2_DescribeVpcsInput
}
func (g *BezosRequest_Ec2_DescribeRouteTablesInput) GetDescribeRouteTablesInput() *opsee_aws_ec2.DescribeRouteTablesInput {
	return g.Ec2_DescribeRouteTablesInput
}
func (g *BezosRequest_Elb_DescribeLoadBalancersInput) GetDescribeLoadBalancersInput() *opsee_aws_elb.DescribeLoadBalancersInput {
	return g.Elb_DescribeLoadBalancersInput
}
func (g *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput) GetDescribeAutoScalingGroupsInput() *opsee_aws_autoscaling.DescribeAutoScalingGroupsInput {
	return g.Autoscaling_DescribeAutoScalingGroupsInput
}
func (g *BezosRequest_Rds_DescribeDBInstancesInput) GetDescribeDBInstancesInput() *opsee_aws_rds.DescribeDBInstancesInput {
	return g.Rds_DescribeDBInstancesInput
}
func (g *BezosRequest_Ecs_ListTasksInput) GetListTasksInput() *opsee_aws_ecs.ListTasksInput {
	return g.Ecs_ListTasksInput
}
func (g *BezosRequest_Ecs_DescribeTasksInput) GetDescribeTasksInput() *opsee_aws_ecs.DescribeTasksInput {
	return g.Ecs_DescribeTasksInput
}
func (g *BezosRequest_Ecs_DescribeContainerInstancesInput) GetDescribeContainerInstancesInput() *opsee_aws_ecs.DescribeContainerInstancesInput {
	return g.Ecs_DescribeContainerInstancesInput
}
func (g *BezosRequest_Ecs_ListClustersInput) GetListClustersInput() *opsee_aws_ecs.ListClustersInput {
	return g.Ecs_ListClustersInput
}
func (g *BezosRequest_Ecs_ListServicesInput) GetListServicesInput() *opsee_aws_ecs.ListServicesInput {
	return g.Ecs_ListServicesInput
}
func (g *BezosRequest_Ecs_DescribeServicesInput) GetDescribeServicesInput() *opsee_aws_ecs.DescribeServicesInput {
	return g.Ecs_DescribeServicesInput
}
func (g *BezosRequest_Ecs_ListContainerInstancesInput) GetListContainerInstancesInput() *opsee_aws_ecs.ListContainerInstancesInput {
	return g.Ecs_ListContainerInstancesInput
}
func (g *BezosResponse_Cloudwatch_ListMetricsOutput) GetListMetricsOutput() *opsee_aws_cloudwatch.ListMetricsOutput {
	return g.Cloudwatch_ListMetricsOutput
}
func (g *BezosResponse_Cloudwatch_GetMetricStatisticsOutput) GetGetMetricStatisticsOutput() *opsee_aws_cloudwatch.GetMetricStatisticsOutput {
	return g.Cloudwatch_GetMetricStatisticsOutput
}
func (g *BezosResponse_Cloudwatch_DescribeAlarmsOutput) GetDescribeAlarmsOutput() *opsee_aws_cloudwatch.DescribeAlarmsOutput {
	return g.Cloudwatch_DescribeAlarmsOutput
}
func (g *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput) GetDescribeAlarmsForMetricOutput() *opsee_aws_cloudwatch.DescribeAlarmsForMetricOutput {
	return g.Cloudwatch_DescribeAlarmsForMetricOutput
}
func (g *BezosResponse_Ec2_DescribeInstancesOutput) GetDescribeInstancesOutput() *opsee_aws_ec2.DescribeInstancesOutput {
	return g.Ec2_DescribeInstancesOutput
}
func (g *BezosResponse_Ec2_DescribeSecurityGroupsOutput) GetDescribeSecurityGroupsOutput() *opsee_aws_ec2.DescribeSecurityGroupsOutput {
	return g.Ec2_DescribeSecurityGroupsOutput
}
func (g *BezosResponse_Ec2_DescribeSubnetsOutput) GetDescribeSubnetsOutput() *opsee_aws_ec2.DescribeSubnetsOutput {
	return g.Ec2_DescribeSubnetsOutput
}
func (g *BezosResponse_Ec2_DescribeVpcsOutput) GetDescribeVpcsOutput() *opsee_aws_ec2.DescribeVpcsOutput {
	return g.Ec2_DescribeVpcsOutput
}
func (g *BezosResponse_Ec2_DescribeRouteTablesOutput) GetDescribeRouteTablesOutput() *opsee_aws_ec2.DescribeRouteTablesOutput {
	return g.Ec2_DescribeRouteTablesOutput
}
func (g *BezosResponse_Elb_DescribeLoadBalancersOutput) GetDescribeLoadBalancersOutput() *opsee_aws_elb.DescribeLoadBalancersOutput {
	return g.Elb_DescribeLoadBalancersOutput
}
func (g *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput) GetDescribeAutoScalingGroupsOutput() *opsee_aws_autoscaling.DescribeAutoScalingGroupsOutput {
	return g.Autoscaling_DescribeAutoScalingGroupsOutput
}
func (g *BezosResponse_Rds_DescribeDBInstancesOutput) GetDescribeDBInstancesOutput() *opsee_aws_rds.DescribeDBInstancesOutput {
	return g.Rds_DescribeDBInstancesOutput
}
func (g *BezosResponse_Ecs_ListTasksOutput) GetListTasksOutput() *opsee_aws_ecs.ListTasksOutput {
	return g.Ecs_ListTasksOutput
}
func (g *BezosResponse_Ecs_DescribeTasksOutput) GetDescribeTasksOutput() *opsee_aws_ecs.DescribeTasksOutput {
	return g.Ecs_DescribeTasksOutput
}
func (g *BezosResponse_Ecs_DescribeContainerInstancesOutput) GetDescribeContainerInstancesOutput() *opsee_aws_ecs.DescribeContainerInstancesOutput {
	return g.Ecs_DescribeContainerInstancesOutput
}
func (g *BezosResponse_Ecs_ListClustersOutput) GetListClustersOutput() *opsee_aws_ecs.ListClustersOutput {
	return g.Ecs_ListClustersOutput
}
func (g *BezosResponse_Ecs_ListServicesOutput) GetListServicesOutput() *opsee_aws_ecs.ListServicesOutput {
	return g.Ecs_ListServicesOutput
}
func (g *BezosResponse_Ecs_DescribeServicesOutput) GetDescribeServicesOutput() *opsee_aws_ecs.DescribeServicesOutput {
	return g.Ecs_DescribeServicesOutput
}
func (g *BezosResponse_Ecs_ListContainerInstancesOutput) GetListContainerInstancesOutput() *opsee_aws_ecs.ListContainerInstancesOutput {
	return g.Ecs_ListContainerInstancesOutput
}

func init() {
	GraphQLBezosRequestType = github_com_graphql_go_graphql.NewObject(github_com_graphql_go_graphql.ObjectConfig{
		Name:        "serviceBezosRequest",
		Description: "",
		Fields: (github_com_graphql_go_graphql.FieldsThunk)(func() github_com_graphql_go_graphql.Fields {
			return github_com_graphql_go_graphql.Fields{
				"user": &github_com_graphql_go_graphql.Field{
					Type:        opsee1.GraphQLUserType,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosRequest)
						if ok {
							if obj.User == nil {
								return nil, nil
							}
							return obj.GetUser(), nil
						}
						inter, ok := p.Source.(BezosRequestGetter)
						if ok {
							face := inter.GetBezosRequest()
							if face == nil {
								return nil, nil
							}
							if face.User == nil {
								return nil, nil
							}
							return face.GetUser(), nil
						}
						return nil, fmt.Errorf("field user not resolved")
					},
				},
				"region": &github_com_graphql_go_graphql.Field{
					Type:        github_com_graphql_go_graphql.String,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosRequest)
						if ok {
							return obj.Region, nil
						}
						inter, ok := p.Source.(BezosRequestGetter)
						if ok {
							face := inter.GetBezosRequest()
							if face == nil {
								return nil, nil
							}
							return face.Region, nil
						}
						return nil, fmt.Errorf("field region not resolved")
					},
				},
				"vpc_id": &github_com_graphql_go_graphql.Field{
					Type:        github_com_graphql_go_graphql.String,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosRequest)
						if ok {
							return obj.VpcId, nil
						}
						inter, ok := p.Source.(BezosRequestGetter)
						if ok {
							face := inter.GetBezosRequest()
							if face == nil {
								return nil, nil
							}
							return face.VpcId, nil
						}
						return nil, fmt.Errorf("field vpc_id not resolved")
					},
				},
				"max_age": &github_com_graphql_go_graphql.Field{
					Type:        github_com_opsee_protobuf_plugin_graphql_scalars.Timestamp,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosRequest)
						if ok {
							if obj.MaxAge == nil {
								return nil, nil
							}
							return obj.GetMaxAge(), nil
						}
						inter, ok := p.Source.(BezosRequestGetter)
						if ok {
							face := inter.GetBezosRequest()
							if face == nil {
								return nil, nil
							}
							if face.MaxAge == nil {
								return nil, nil
							}
							return face.GetMaxAge(), nil
						}
						return nil, fmt.Errorf("field max_age not resolved")
					},
				},
				"input": &github_com_graphql_go_graphql.Field{
					Type:        GraphQLBezosRequestInputUnion,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosRequest)
						if !ok {
							return nil, fmt.Errorf("field input not resolved")
						}
						return obj.GetInput(), nil
					},
				},
			}
		}),
	})
	GraphQLBezosResponseType = github_com_graphql_go_graphql.NewObject(github_com_graphql_go_graphql.ObjectConfig{
		Name:        "serviceBezosResponse",
		Description: "",
		Fields: (github_com_graphql_go_graphql.FieldsThunk)(func() github_com_graphql_go_graphql.Fields {
			return github_com_graphql_go_graphql.Fields{
				"last_modified": &github_com_graphql_go_graphql.Field{
					Type:        github_com_opsee_protobuf_plugin_graphql_scalars.Timestamp,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosResponse)
						if ok {
							if obj.LastModified == nil {
								return nil, nil
							}
							return obj.GetLastModified(), nil
						}
						inter, ok := p.Source.(BezosResponseGetter)
						if ok {
							face := inter.GetBezosResponse()
							if face == nil {
								return nil, nil
							}
							if face.LastModified == nil {
								return nil, nil
							}
							return face.GetLastModified(), nil
						}
						return nil, fmt.Errorf("field last_modified not resolved")
					},
				},
				"output": &github_com_graphql_go_graphql.Field{
					Type:        GraphQLBezosResponseOutputUnion,
					Description: "",
					Resolve: func(p github_com_graphql_go_graphql.ResolveParams) (interface{}, error) {
						obj, ok := p.Source.(*BezosResponse)
						if !ok {
							return nil, fmt.Errorf("field output not resolved")
						}
						return obj.GetOutput(), nil
					},
				},
			}
		}),
	})
	GraphQLBezosRequestInputUnion = github_com_graphql_go_graphql.NewUnion(github_com_graphql_go_graphql.UnionConfig{
		Name:        "BezosRequestInput",
		Description: "",
		Types: []*github_com_graphql_go_graphql.Object{
			opsee_aws_cloudwatch.GraphQLListMetricsInputType,
			opsee_aws_cloudwatch.GraphQLGetMetricStatisticsInputType,
			opsee_aws_cloudwatch.GraphQLDescribeAlarmsInputType,
			opsee_aws_cloudwatch.GraphQLDescribeAlarmsForMetricInputType,
			opsee_aws_ec2.GraphQLDescribeInstancesInputType,
			opsee_aws_ec2.GraphQLDescribeSecurityGroupsInputType,
			opsee_aws_ec2.GraphQLDescribeSubnetsInputType,
			opsee_aws_ec2.GraphQLDescribeVpcsInputType,
			opsee_aws_ec2.GraphQLDescribeRouteTablesInputType,
			opsee_aws_elb.GraphQLDescribeLoadBalancersInputType,
			opsee_aws_autoscaling.GraphQLDescribeAutoScalingGroupsInputType,
			opsee_aws_rds.GraphQLDescribeDBInstancesInputType,
			opsee_aws_ecs.GraphQLListTasksInputType,
			opsee_aws_ecs.GraphQLDescribeTasksInputType,
			opsee_aws_ecs.GraphQLDescribeContainerInstancesInputType,
			opsee_aws_ecs.GraphQLListClustersInputType,
			opsee_aws_ecs.GraphQLListServicesInputType,
			opsee_aws_ecs.GraphQLDescribeServicesInputType,
			opsee_aws_ecs.GraphQLListContainerInstancesInputType,
		},
		ResolveType: func(value interface{}, info github_com_graphql_go_graphql.ResolveInfo) *github_com_graphql_go_graphql.Object {
			switch value.(type) {
			case *BezosRequest_Cloudwatch_ListMetricsInput:
				return opsee_aws_cloudwatch.GraphQLListMetricsInputType
			case *BezosRequest_Cloudwatch_GetMetricStatisticsInput:
				return opsee_aws_cloudwatch.GraphQLGetMetricStatisticsInputType
			case *BezosRequest_Cloudwatch_DescribeAlarmsInput:
				return opsee_aws_cloudwatch.GraphQLDescribeAlarmsInputType
			case *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput:
				return opsee_aws_cloudwatch.GraphQLDescribeAlarmsForMetricInputType
			case *BezosRequest_Ec2_DescribeInstancesInput:
				return opsee_aws_ec2.GraphQLDescribeInstancesInputType
			case *BezosRequest_Ec2_DescribeSecurityGroupsInput:
				return opsee_aws_ec2.GraphQLDescribeSecurityGroupsInputType
			case *BezosRequest_Ec2_DescribeSubnetsInput:
				return opsee_aws_ec2.GraphQLDescribeSubnetsInputType
			case *BezosRequest_Ec2_DescribeVpcsInput:
				return opsee_aws_ec2.GraphQLDescribeVpcsInputType
			case *BezosRequest_Ec2_DescribeRouteTablesInput:
				return opsee_aws_ec2.GraphQLDescribeRouteTablesInputType
			case *BezosRequest_Elb_DescribeLoadBalancersInput:
				return opsee_aws_elb.GraphQLDescribeLoadBalancersInputType
			case *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput:
				return opsee_aws_autoscaling.GraphQLDescribeAutoScalingGroupsInputType
			case *BezosRequest_Rds_DescribeDBInstancesInput:
				return opsee_aws_rds.GraphQLDescribeDBInstancesInputType
			case *BezosRequest_Ecs_ListTasksInput:
				return opsee_aws_ecs.GraphQLListTasksInputType
			case *BezosRequest_Ecs_DescribeTasksInput:
				return opsee_aws_ecs.GraphQLDescribeTasksInputType
			case *BezosRequest_Ecs_DescribeContainerInstancesInput:
				return opsee_aws_ecs.GraphQLDescribeContainerInstancesInputType
			case *BezosRequest_Ecs_ListClustersInput:
				return opsee_aws_ecs.GraphQLListClustersInputType
			case *BezosRequest_Ecs_ListServicesInput:
				return opsee_aws_ecs.GraphQLListServicesInputType
			case *BezosRequest_Ecs_DescribeServicesInput:
				return opsee_aws_ecs.GraphQLDescribeServicesInputType
			case *BezosRequest_Ecs_ListContainerInstancesInput:
				return opsee_aws_ecs.GraphQLListContainerInstancesInputType
			}
			return nil
		},
	})
	GraphQLBezosResponseOutputUnion = github_com_graphql_go_graphql.NewUnion(github_com_graphql_go_graphql.UnionConfig{
		Name:        "BezosResponseOutput",
		Description: "",
		Types: []*github_com_graphql_go_graphql.Object{
			opsee_aws_cloudwatch.GraphQLListMetricsOutputType,
			opsee_aws_cloudwatch.GraphQLGetMetricStatisticsOutputType,
			opsee_aws_cloudwatch.GraphQLDescribeAlarmsOutputType,
			opsee_aws_cloudwatch.GraphQLDescribeAlarmsForMetricOutputType,
			opsee_aws_ec2.GraphQLDescribeInstancesOutputType,
			opsee_aws_ec2.GraphQLDescribeSecurityGroupsOutputType,
			opsee_aws_ec2.GraphQLDescribeSubnetsOutputType,
			opsee_aws_ec2.GraphQLDescribeVpcsOutputType,
			opsee_aws_ec2.GraphQLDescribeRouteTablesOutputType,
			opsee_aws_elb.GraphQLDescribeLoadBalancersOutputType,
			opsee_aws_autoscaling.GraphQLDescribeAutoScalingGroupsOutputType,
			opsee_aws_rds.GraphQLDescribeDBInstancesOutputType,
			opsee_aws_ecs.GraphQLListTasksOutputType,
			opsee_aws_ecs.GraphQLDescribeTasksOutputType,
			opsee_aws_ecs.GraphQLDescribeContainerInstancesOutputType,
			opsee_aws_ecs.GraphQLListClustersOutputType,
			opsee_aws_ecs.GraphQLListServicesOutputType,
			opsee_aws_ecs.GraphQLDescribeServicesOutputType,
			opsee_aws_ecs.GraphQLListContainerInstancesOutputType,
		},
		ResolveType: func(value interface{}, info github_com_graphql_go_graphql.ResolveInfo) *github_com_graphql_go_graphql.Object {
			switch value.(type) {
			case *BezosResponse_Cloudwatch_ListMetricsOutput:
				return opsee_aws_cloudwatch.GraphQLListMetricsOutputType
			case *BezosResponse_Cloudwatch_GetMetricStatisticsOutput:
				return opsee_aws_cloudwatch.GraphQLGetMetricStatisticsOutputType
			case *BezosResponse_Cloudwatch_DescribeAlarmsOutput:
				return opsee_aws_cloudwatch.GraphQLDescribeAlarmsOutputType
			case *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput:
				return opsee_aws_cloudwatch.GraphQLDescribeAlarmsForMetricOutputType
			case *BezosResponse_Ec2_DescribeInstancesOutput:
				return opsee_aws_ec2.GraphQLDescribeInstancesOutputType
			case *BezosResponse_Ec2_DescribeSecurityGroupsOutput:
				return opsee_aws_ec2.GraphQLDescribeSecurityGroupsOutputType
			case *BezosResponse_Ec2_DescribeSubnetsOutput:
				return opsee_aws_ec2.GraphQLDescribeSubnetsOutputType
			case *BezosResponse_Ec2_DescribeVpcsOutput:
				return opsee_aws_ec2.GraphQLDescribeVpcsOutputType
			case *BezosResponse_Ec2_DescribeRouteTablesOutput:
				return opsee_aws_ec2.GraphQLDescribeRouteTablesOutputType
			case *BezosResponse_Elb_DescribeLoadBalancersOutput:
				return opsee_aws_elb.GraphQLDescribeLoadBalancersOutputType
			case *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput:
				return opsee_aws_autoscaling.GraphQLDescribeAutoScalingGroupsOutputType
			case *BezosResponse_Rds_DescribeDBInstancesOutput:
				return opsee_aws_rds.GraphQLDescribeDBInstancesOutputType
			case *BezosResponse_Ecs_ListTasksOutput:
				return opsee_aws_ecs.GraphQLListTasksOutputType
			case *BezosResponse_Ecs_DescribeTasksOutput:
				return opsee_aws_ecs.GraphQLDescribeTasksOutputType
			case *BezosResponse_Ecs_DescribeContainerInstancesOutput:
				return opsee_aws_ecs.GraphQLDescribeContainerInstancesOutputType
			case *BezosResponse_Ecs_ListClustersOutput:
				return opsee_aws_ecs.GraphQLListClustersOutputType
			case *BezosResponse_Ecs_ListServicesOutput:
				return opsee_aws_ecs.GraphQLListServicesOutputType
			case *BezosResponse_Ecs_DescribeServicesOutput:
				return opsee_aws_ecs.GraphQLDescribeServicesOutputType
			case *BezosResponse_Ecs_ListContainerInstancesOutput:
				return opsee_aws_ecs.GraphQLListContainerInstancesOutputType
			}
			return nil
		},
	})
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Bezos service

type BezosClient interface {
	Get(ctx context.Context, in *BezosRequest, opts ...grpc.CallOption) (*BezosResponse, error)
}

type bezosClient struct {
	cc *grpc.ClientConn
}

func NewBezosClient(cc *grpc.ClientConn) BezosClient {
	return &bezosClient{cc}
}

func (c *bezosClient) Get(ctx context.Context, in *BezosRequest, opts ...grpc.CallOption) (*BezosResponse, error) {
	out := new(BezosResponse)
	err := grpc.Invoke(ctx, "/opsee.Bezos/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bezos service

type BezosServer interface {
	Get(context.Context, *BezosRequest) (*BezosResponse, error)
}

func RegisterBezosServer(s *grpc.Server, srv BezosServer) {
	s.RegisterService(&_Bezos_serviceDesc, srv)
}

func _Bezos_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(BezosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(BezosServer).Get(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Bezos_serviceDesc = grpc.ServiceDesc{
	ServiceName: "opsee.Bezos",
	HandlerType: (*BezosServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Bezos_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

func (m *BezosRequest) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BezosRequest) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.User != nil {
		data[i] = 0xa
		i++
		i = encodeVarintBezos(data, i, uint64(m.User.Size()))
		n1, err := m.User.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if len(m.Region) > 0 {
		data[i] = 0x12
		i++
		i = encodeVarintBezos(data, i, uint64(len(m.Region)))
		i += copy(data[i:], m.Region)
	}
	if len(m.VpcId) > 0 {
		data[i] = 0x1a
		i++
		i = encodeVarintBezos(data, i, uint64(len(m.VpcId)))
		i += copy(data[i:], m.VpcId)
	}
	if m.MaxAge != nil {
		data[i] = 0x22
		i++
		i = encodeVarintBezos(data, i, uint64(m.MaxAge.Size()))
		n2, err := m.MaxAge.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.Input != nil {
		nn3, err := m.Input.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += nn3
	}
	return i, nil
}

func (m *BezosRequest_Cloudwatch_ListMetricsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_ListMetricsInput != nil {
		data[i] = 0xaa
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_ListMetricsInput.Size()))
		n4, err := m.Cloudwatch_ListMetricsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	return i, nil
}
func (m *BezosRequest_Cloudwatch_GetMetricStatisticsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_GetMetricStatisticsInput != nil {
		data[i] = 0xb2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_GetMetricStatisticsInput.Size()))
		n5, err := m.Cloudwatch_GetMetricStatisticsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}
func (m *BezosRequest_Cloudwatch_DescribeAlarmsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_DescribeAlarmsInput != nil {
		data[i] = 0xba
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_DescribeAlarmsInput.Size()))
		n6, err := m.Cloudwatch_DescribeAlarmsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n6
	}
	return i, nil
}
func (m *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_DescribeAlarmsForMetricInput != nil {
		data[i] = 0xc2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_DescribeAlarmsForMetricInput.Size()))
		n7, err := m.Cloudwatch_DescribeAlarmsForMetricInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n7
	}
	return i, nil
}
func (m *BezosRequest_Ec2_DescribeInstancesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeInstancesInput != nil {
		data[i] = 0xca
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeInstancesInput.Size()))
		n8, err := m.Ec2_DescribeInstancesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n8
	}
	return i, nil
}
func (m *BezosRequest_Ec2_DescribeSecurityGroupsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeSecurityGroupsInput != nil {
		data[i] = 0xd2
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeSecurityGroupsInput.Size()))
		n9, err := m.Ec2_DescribeSecurityGroupsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n9
	}
	return i, nil
}
func (m *BezosRequest_Ec2_DescribeSubnetsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeSubnetsInput != nil {
		data[i] = 0xda
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeSubnetsInput.Size()))
		n10, err := m.Ec2_DescribeSubnetsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n10
	}
	return i, nil
}
func (m *BezosRequest_Ec2_DescribeVpcsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeVpcsInput != nil {
		data[i] = 0xe2
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeVpcsInput.Size()))
		n11, err := m.Ec2_DescribeVpcsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n11
	}
	return i, nil
}
func (m *BezosRequest_Ec2_DescribeRouteTablesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeRouteTablesInput != nil {
		data[i] = 0xea
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeRouteTablesInput.Size()))
		n12, err := m.Ec2_DescribeRouteTablesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n12
	}
	return i, nil
}
func (m *BezosRequest_Elb_DescribeLoadBalancersInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Elb_DescribeLoadBalancersInput != nil {
		data[i] = 0xea
		i++
		data[i] = 0x12
		i++
		i = encodeVarintBezos(data, i, uint64(m.Elb_DescribeLoadBalancersInput.Size()))
		n13, err := m.Elb_DescribeLoadBalancersInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n13
	}
	return i, nil
}
func (m *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Autoscaling_DescribeAutoScalingGroupsInput != nil {
		data[i] = 0x8a
		i++
		data[i] = 0x19
		i++
		i = encodeVarintBezos(data, i, uint64(m.Autoscaling_DescribeAutoScalingGroupsInput.Size()))
		n14, err := m.Autoscaling_DescribeAutoScalingGroupsInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n14
	}
	return i, nil
}
func (m *BezosRequest_Rds_DescribeDBInstancesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Rds_DescribeDBInstancesInput != nil {
		data[i] = 0xaa
		i++
		data[i] = 0x1f
		i++
		i = encodeVarintBezos(data, i, uint64(m.Rds_DescribeDBInstancesInput.Size()))
		n15, err := m.Rds_DescribeDBInstancesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n15
	}
	return i, nil
}
func (m *BezosRequest_Ecs_ListTasksInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListTasksInput != nil {
		data[i] = 0xca
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListTasksInput.Size()))
		n16, err := m.Ecs_ListTasksInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n16
	}
	return i, nil
}
func (m *BezosRequest_Ecs_DescribeTasksInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_DescribeTasksInput != nil {
		data[i] = 0xd2
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_DescribeTasksInput.Size()))
		n17, err := m.Ecs_DescribeTasksInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n17
	}
	return i, nil
}
func (m *BezosRequest_Ecs_DescribeContainerInstancesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_DescribeContainerInstancesInput != nil {
		data[i] = 0xda
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_DescribeContainerInstancesInput.Size()))
		n18, err := m.Ecs_DescribeContainerInstancesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n18
	}
	return i, nil
}
func (m *BezosRequest_Ecs_ListClustersInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListClustersInput != nil {
		data[i] = 0xe2
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListClustersInput.Size()))
		n19, err := m.Ecs_ListClustersInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n19
	}
	return i, nil
}
func (m *BezosRequest_Ecs_ListServicesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListServicesInput != nil {
		data[i] = 0xea
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListServicesInput.Size()))
		n20, err := m.Ecs_ListServicesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n20
	}
	return i, nil
}
func (m *BezosRequest_Ecs_DescribeServicesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_DescribeServicesInput != nil {
		data[i] = 0xf2
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_DescribeServicesInput.Size()))
		n21, err := m.Ecs_DescribeServicesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n21
	}
	return i, nil
}
func (m *BezosRequest_Ecs_ListContainerInstancesInput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListContainerInstancesInput != nil {
		data[i] = 0xfa
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListContainerInstancesInput.Size()))
		n22, err := m.Ecs_ListContainerInstancesInput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n22
	}
	return i, nil
}
func (m *BezosResponse) Marshal() (data []byte, err error) {
	size := m.Size()
	data = make([]byte, size)
	n, err := m.MarshalTo(data)
	if err != nil {
		return nil, err
	}
	return data[:n], nil
}

func (m *BezosResponse) MarshalTo(data []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.LastModified != nil {
		data[i] = 0xa
		i++
		i = encodeVarintBezos(data, i, uint64(m.LastModified.Size()))
		n23, err := m.LastModified.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n23
	}
	if m.Output != nil {
		nn24, err := m.Output.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += nn24
	}
	return i, nil
}

func (m *BezosResponse_Cloudwatch_ListMetricsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_ListMetricsOutput != nil {
		data[i] = 0xaa
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_ListMetricsOutput.Size()))
		n25, err := m.Cloudwatch_ListMetricsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n25
	}
	return i, nil
}
func (m *BezosResponse_Cloudwatch_GetMetricStatisticsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_GetMetricStatisticsOutput != nil {
		data[i] = 0xb2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_GetMetricStatisticsOutput.Size()))
		n26, err := m.Cloudwatch_GetMetricStatisticsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n26
	}
	return i, nil
}
func (m *BezosResponse_Cloudwatch_DescribeAlarmsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_DescribeAlarmsOutput != nil {
		data[i] = 0xba
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_DescribeAlarmsOutput.Size()))
		n27, err := m.Cloudwatch_DescribeAlarmsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n27
	}
	return i, nil
}
func (m *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Cloudwatch_DescribeAlarmsForMetricOutput != nil {
		data[i] = 0xc2
		i++
		data[i] = 0x6
		i++
		i = encodeVarintBezos(data, i, uint64(m.Cloudwatch_DescribeAlarmsForMetricOutput.Size()))
		n28, err := m.Cloudwatch_DescribeAlarmsForMetricOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n28
	}
	return i, nil
}
func (m *BezosResponse_Ec2_DescribeInstancesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeInstancesOutput != nil {
		data[i] = 0xca
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeInstancesOutput.Size()))
		n29, err := m.Ec2_DescribeInstancesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n29
	}
	return i, nil
}
func (m *BezosResponse_Ec2_DescribeSecurityGroupsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeSecurityGroupsOutput != nil {
		data[i] = 0xd2
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeSecurityGroupsOutput.Size()))
		n30, err := m.Ec2_DescribeSecurityGroupsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n30
	}
	return i, nil
}
func (m *BezosResponse_Ec2_DescribeSubnetsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeSubnetsOutput != nil {
		data[i] = 0xda
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeSubnetsOutput.Size()))
		n31, err := m.Ec2_DescribeSubnetsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n31
	}
	return i, nil
}
func (m *BezosResponse_Ec2_DescribeVpcsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeVpcsOutput != nil {
		data[i] = 0xe2
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeVpcsOutput.Size()))
		n32, err := m.Ec2_DescribeVpcsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n32
	}
	return i, nil
}
func (m *BezosResponse_Ec2_DescribeRouteTablesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ec2_DescribeRouteTablesOutput != nil {
		data[i] = 0xea
		i++
		data[i] = 0xc
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ec2_DescribeRouteTablesOutput.Size()))
		n33, err := m.Ec2_DescribeRouteTablesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n33
	}
	return i, nil
}
func (m *BezosResponse_Elb_DescribeLoadBalancersOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Elb_DescribeLoadBalancersOutput != nil {
		data[i] = 0xea
		i++
		data[i] = 0x12
		i++
		i = encodeVarintBezos(data, i, uint64(m.Elb_DescribeLoadBalancersOutput.Size()))
		n34, err := m.Elb_DescribeLoadBalancersOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n34
	}
	return i, nil
}
func (m *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Autoscaling_DescribeAutoScalingGroupsOutput != nil {
		data[i] = 0x8a
		i++
		data[i] = 0x19
		i++
		i = encodeVarintBezos(data, i, uint64(m.Autoscaling_DescribeAutoScalingGroupsOutput.Size()))
		n35, err := m.Autoscaling_DescribeAutoScalingGroupsOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n35
	}
	return i, nil
}
func (m *BezosResponse_Rds_DescribeDBInstancesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Rds_DescribeDBInstancesOutput != nil {
		data[i] = 0xaa
		i++
		data[i] = 0x1f
		i++
		i = encodeVarintBezos(data, i, uint64(m.Rds_DescribeDBInstancesOutput.Size()))
		n36, err := m.Rds_DescribeDBInstancesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	return i, nil
}
func (m *BezosResponse_Ecs_ListTasksOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListTasksOutput != nil {
		data[i] = 0xca
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListTasksOutput.Size()))
		n37, err := m.Ecs_ListTasksOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	return i, nil
}
func (m *BezosResponse_Ecs_DescribeTasksOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_DescribeTasksOutput != nil {
		data[i] = 0xd2
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_DescribeTasksOutput.Size()))
		n38, err := m.Ecs_DescribeTasksOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	return i, nil
}
func (m *BezosResponse_Ecs_DescribeContainerInstancesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_DescribeContainerInstancesOutput != nil {
		data[i] = 0xda
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_DescribeContainerInstancesOutput.Size()))
		n39, err := m.Ecs_DescribeContainerInstancesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	return i, nil
}
func (m *BezosResponse_Ecs_ListClustersOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListClustersOutput != nil {
		data[i] = 0xe2
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListClustersOutput.Size()))
		n40, err := m.Ecs_ListClustersOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	return i, nil
}
func (m *BezosResponse_Ecs_ListServicesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListServicesOutput != nil {
		data[i] = 0xea
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListServicesOutput.Size()))
		n41, err := m.Ecs_ListServicesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	return i, nil
}
func (m *BezosResponse_Ecs_DescribeServicesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_DescribeServicesOutput != nil {
		data[i] = 0xf2
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_DescribeServicesOutput.Size()))
		n42, err := m.Ecs_DescribeServicesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n42
	}
	return i, nil
}
func (m *BezosResponse_Ecs_ListContainerInstancesOutput) MarshalTo(data []byte) (int, error) {
	i := 0
	if m.Ecs_ListContainerInstancesOutput != nil {
		data[i] = 0xfa
		i++
		data[i] = 0x25
		i++
		i = encodeVarintBezos(data, i, uint64(m.Ecs_ListContainerInstancesOutput.Size()))
		n43, err := m.Ecs_ListContainerInstancesOutput.MarshalTo(data[i:])
		if err != nil {
			return 0, err
		}
		i += n43
	}
	return i, nil
}
func encodeFixed64Bezos(data []byte, offset int, v uint64) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	data[offset+4] = uint8(v >> 32)
	data[offset+5] = uint8(v >> 40)
	data[offset+6] = uint8(v >> 48)
	data[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Bezos(data []byte, offset int, v uint32) int {
	data[offset] = uint8(v)
	data[offset+1] = uint8(v >> 8)
	data[offset+2] = uint8(v >> 16)
	data[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintBezos(data []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		data[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	data[offset] = uint8(v)
	return offset + 1
}
func NewPopulatedBezosRequest(r randyBezos, easy bool) *BezosRequest {
	this := &BezosRequest{}
	if r.Intn(10) != 0 {
		this.User = opsee1.NewPopulatedUser(r, easy)
	}
	this.Region = randStringBezos(r)
	this.VpcId = randStringBezos(r)
	if r.Intn(10) != 0 {
		this.MaxAge = opsee_types.NewPopulatedTimestamp(r, easy)
	}
	oneofNumber_Input := []int32{101, 102, 103, 104, 201, 202, 203, 204, 205, 301, 401, 501, 601, 602, 603, 604, 605, 606, 607}[r.Intn(19)]
	switch oneofNumber_Input {
	case 101:
		this.Input = NewPopulatedBezosRequest_Cloudwatch_ListMetricsInput(r, easy)
	case 102:
		this.Input = NewPopulatedBezosRequest_Cloudwatch_GetMetricStatisticsInput(r, easy)
	case 103:
		this.Input = NewPopulatedBezosRequest_Cloudwatch_DescribeAlarmsInput(r, easy)
	case 104:
		this.Input = NewPopulatedBezosRequest_Cloudwatch_DescribeAlarmsForMetricInput(r, easy)
	case 201:
		this.Input = NewPopulatedBezosRequest_Ec2_DescribeInstancesInput(r, easy)
	case 202:
		this.Input = NewPopulatedBezosRequest_Ec2_DescribeSecurityGroupsInput(r, easy)
	case 203:
		this.Input = NewPopulatedBezosRequest_Ec2_DescribeSubnetsInput(r, easy)
	case 204:
		this.Input = NewPopulatedBezosRequest_Ec2_DescribeVpcsInput(r, easy)
	case 205:
		this.Input = NewPopulatedBezosRequest_Ec2_DescribeRouteTablesInput(r, easy)
	case 301:
		this.Input = NewPopulatedBezosRequest_Elb_DescribeLoadBalancersInput(r, easy)
	case 401:
		this.Input = NewPopulatedBezosRequest_Autoscaling_DescribeAutoScalingGroupsInput(r, easy)
	case 501:
		this.Input = NewPopulatedBezosRequest_Rds_DescribeDBInstancesInput(r, easy)
	case 601:
		this.Input = NewPopulatedBezosRequest_Ecs_ListTasksInput(r, easy)
	case 602:
		this.Input = NewPopulatedBezosRequest_Ecs_DescribeTasksInput(r, easy)
	case 603:
		this.Input = NewPopulatedBezosRequest_Ecs_DescribeContainerInstancesInput(r, easy)
	case 604:
		this.Input = NewPopulatedBezosRequest_Ecs_ListClustersInput(r, easy)
	case 605:
		this.Input = NewPopulatedBezosRequest_Ecs_ListServicesInput(r, easy)
	case 606:
		this.Input = NewPopulatedBezosRequest_Ecs_DescribeServicesInput(r, easy)
	case 607:
		this.Input = NewPopulatedBezosRequest_Ecs_ListContainerInstancesInput(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedBezosRequest_Cloudwatch_ListMetricsInput(r randyBezos, easy bool) *BezosRequest_Cloudwatch_ListMetricsInput {
	this := &BezosRequest_Cloudwatch_ListMetricsInput{}
	this.Cloudwatch_ListMetricsInput = opsee_aws_cloudwatch.NewPopulatedListMetricsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Cloudwatch_GetMetricStatisticsInput(r randyBezos, easy bool) *BezosRequest_Cloudwatch_GetMetricStatisticsInput {
	this := &BezosRequest_Cloudwatch_GetMetricStatisticsInput{}
	this.Cloudwatch_GetMetricStatisticsInput = opsee_aws_cloudwatch.NewPopulatedGetMetricStatisticsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Cloudwatch_DescribeAlarmsInput(r randyBezos, easy bool) *BezosRequest_Cloudwatch_DescribeAlarmsInput {
	this := &BezosRequest_Cloudwatch_DescribeAlarmsInput{}
	this.Cloudwatch_DescribeAlarmsInput = opsee_aws_cloudwatch.NewPopulatedDescribeAlarmsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Cloudwatch_DescribeAlarmsForMetricInput(r randyBezos, easy bool) *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput {
	this := &BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput{}
	this.Cloudwatch_DescribeAlarmsForMetricInput = opsee_aws_cloudwatch.NewPopulatedDescribeAlarmsForMetricInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ec2_DescribeInstancesInput(r randyBezos, easy bool) *BezosRequest_Ec2_DescribeInstancesInput {
	this := &BezosRequest_Ec2_DescribeInstancesInput{}
	this.Ec2_DescribeInstancesInput = opsee_aws_ec2.NewPopulatedDescribeInstancesInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ec2_DescribeSecurityGroupsInput(r randyBezos, easy bool) *BezosRequest_Ec2_DescribeSecurityGroupsInput {
	this := &BezosRequest_Ec2_DescribeSecurityGroupsInput{}
	this.Ec2_DescribeSecurityGroupsInput = opsee_aws_ec2.NewPopulatedDescribeSecurityGroupsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ec2_DescribeSubnetsInput(r randyBezos, easy bool) *BezosRequest_Ec2_DescribeSubnetsInput {
	this := &BezosRequest_Ec2_DescribeSubnetsInput{}
	this.Ec2_DescribeSubnetsInput = opsee_aws_ec2.NewPopulatedDescribeSubnetsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ec2_DescribeVpcsInput(r randyBezos, easy bool) *BezosRequest_Ec2_DescribeVpcsInput {
	this := &BezosRequest_Ec2_DescribeVpcsInput{}
	this.Ec2_DescribeVpcsInput = opsee_aws_ec2.NewPopulatedDescribeVpcsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ec2_DescribeRouteTablesInput(r randyBezos, easy bool) *BezosRequest_Ec2_DescribeRouteTablesInput {
	this := &BezosRequest_Ec2_DescribeRouteTablesInput{}
	this.Ec2_DescribeRouteTablesInput = opsee_aws_ec2.NewPopulatedDescribeRouteTablesInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Elb_DescribeLoadBalancersInput(r randyBezos, easy bool) *BezosRequest_Elb_DescribeLoadBalancersInput {
	this := &BezosRequest_Elb_DescribeLoadBalancersInput{}
	this.Elb_DescribeLoadBalancersInput = opsee_aws_elb.NewPopulatedDescribeLoadBalancersInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Autoscaling_DescribeAutoScalingGroupsInput(r randyBezos, easy bool) *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput {
	this := &BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput{}
	this.Autoscaling_DescribeAutoScalingGroupsInput = opsee_aws_autoscaling.NewPopulatedDescribeAutoScalingGroupsInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Rds_DescribeDBInstancesInput(r randyBezos, easy bool) *BezosRequest_Rds_DescribeDBInstancesInput {
	this := &BezosRequest_Rds_DescribeDBInstancesInput{}
	this.Rds_DescribeDBInstancesInput = opsee_aws_rds.NewPopulatedDescribeDBInstancesInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_ListTasksInput(r randyBezos, easy bool) *BezosRequest_Ecs_ListTasksInput {
	this := &BezosRequest_Ecs_ListTasksInput{}
	this.Ecs_ListTasksInput = opsee_aws_ecs.NewPopulatedListTasksInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_DescribeTasksInput(r randyBezos, easy bool) *BezosRequest_Ecs_DescribeTasksInput {
	this := &BezosRequest_Ecs_DescribeTasksInput{}
	this.Ecs_DescribeTasksInput = opsee_aws_ecs.NewPopulatedDescribeTasksInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_DescribeContainerInstancesInput(r randyBezos, easy bool) *BezosRequest_Ecs_DescribeContainerInstancesInput {
	this := &BezosRequest_Ecs_DescribeContainerInstancesInput{}
	this.Ecs_DescribeContainerInstancesInput = opsee_aws_ecs.NewPopulatedDescribeContainerInstancesInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_ListClustersInput(r randyBezos, easy bool) *BezosRequest_Ecs_ListClustersInput {
	this := &BezosRequest_Ecs_ListClustersInput{}
	this.Ecs_ListClustersInput = opsee_aws_ecs.NewPopulatedListClustersInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_ListServicesInput(r randyBezos, easy bool) *BezosRequest_Ecs_ListServicesInput {
	this := &BezosRequest_Ecs_ListServicesInput{}
	this.Ecs_ListServicesInput = opsee_aws_ecs.NewPopulatedListServicesInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_DescribeServicesInput(r randyBezos, easy bool) *BezosRequest_Ecs_DescribeServicesInput {
	this := &BezosRequest_Ecs_DescribeServicesInput{}
	this.Ecs_DescribeServicesInput = opsee_aws_ecs.NewPopulatedDescribeServicesInput(r, easy)
	return this
}
func NewPopulatedBezosRequest_Ecs_ListContainerInstancesInput(r randyBezos, easy bool) *BezosRequest_Ecs_ListContainerInstancesInput {
	this := &BezosRequest_Ecs_ListContainerInstancesInput{}
	this.Ecs_ListContainerInstancesInput = opsee_aws_ecs.NewPopulatedListContainerInstancesInput(r, easy)
	return this
}
func NewPopulatedBezosResponse(r randyBezos, easy bool) *BezosResponse {
	this := &BezosResponse{}
	if r.Intn(10) != 0 {
		this.LastModified = opsee_types.NewPopulatedTimestamp(r, easy)
	}
	oneofNumber_Output := []int32{101, 102, 103, 104, 201, 202, 203, 204, 205, 301, 401, 501, 601, 602, 603, 604, 605, 606, 607}[r.Intn(19)]
	switch oneofNumber_Output {
	case 101:
		this.Output = NewPopulatedBezosResponse_Cloudwatch_ListMetricsOutput(r, easy)
	case 102:
		this.Output = NewPopulatedBezosResponse_Cloudwatch_GetMetricStatisticsOutput(r, easy)
	case 103:
		this.Output = NewPopulatedBezosResponse_Cloudwatch_DescribeAlarmsOutput(r, easy)
	case 104:
		this.Output = NewPopulatedBezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput(r, easy)
	case 201:
		this.Output = NewPopulatedBezosResponse_Ec2_DescribeInstancesOutput(r, easy)
	case 202:
		this.Output = NewPopulatedBezosResponse_Ec2_DescribeSecurityGroupsOutput(r, easy)
	case 203:
		this.Output = NewPopulatedBezosResponse_Ec2_DescribeSubnetsOutput(r, easy)
	case 204:
		this.Output = NewPopulatedBezosResponse_Ec2_DescribeVpcsOutput(r, easy)
	case 205:
		this.Output = NewPopulatedBezosResponse_Ec2_DescribeRouteTablesOutput(r, easy)
	case 301:
		this.Output = NewPopulatedBezosResponse_Elb_DescribeLoadBalancersOutput(r, easy)
	case 401:
		this.Output = NewPopulatedBezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput(r, easy)
	case 501:
		this.Output = NewPopulatedBezosResponse_Rds_DescribeDBInstancesOutput(r, easy)
	case 601:
		this.Output = NewPopulatedBezosResponse_Ecs_ListTasksOutput(r, easy)
	case 602:
		this.Output = NewPopulatedBezosResponse_Ecs_DescribeTasksOutput(r, easy)
	case 603:
		this.Output = NewPopulatedBezosResponse_Ecs_DescribeContainerInstancesOutput(r, easy)
	case 604:
		this.Output = NewPopulatedBezosResponse_Ecs_ListClustersOutput(r, easy)
	case 605:
		this.Output = NewPopulatedBezosResponse_Ecs_ListServicesOutput(r, easy)
	case 606:
		this.Output = NewPopulatedBezosResponse_Ecs_DescribeServicesOutput(r, easy)
	case 607:
		this.Output = NewPopulatedBezosResponse_Ecs_ListContainerInstancesOutput(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedBezosResponse_Cloudwatch_ListMetricsOutput(r randyBezos, easy bool) *BezosResponse_Cloudwatch_ListMetricsOutput {
	this := &BezosResponse_Cloudwatch_ListMetricsOutput{}
	this.Cloudwatch_ListMetricsOutput = opsee_aws_cloudwatch.NewPopulatedListMetricsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Cloudwatch_GetMetricStatisticsOutput(r randyBezos, easy bool) *BezosResponse_Cloudwatch_GetMetricStatisticsOutput {
	this := &BezosResponse_Cloudwatch_GetMetricStatisticsOutput{}
	this.Cloudwatch_GetMetricStatisticsOutput = opsee_aws_cloudwatch.NewPopulatedGetMetricStatisticsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Cloudwatch_DescribeAlarmsOutput(r randyBezos, easy bool) *BezosResponse_Cloudwatch_DescribeAlarmsOutput {
	this := &BezosResponse_Cloudwatch_DescribeAlarmsOutput{}
	this.Cloudwatch_DescribeAlarmsOutput = opsee_aws_cloudwatch.NewPopulatedDescribeAlarmsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput(r randyBezos, easy bool) *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput {
	this := &BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput{}
	this.Cloudwatch_DescribeAlarmsForMetricOutput = opsee_aws_cloudwatch.NewPopulatedDescribeAlarmsForMetricOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ec2_DescribeInstancesOutput(r randyBezos, easy bool) *BezosResponse_Ec2_DescribeInstancesOutput {
	this := &BezosResponse_Ec2_DescribeInstancesOutput{}
	this.Ec2_DescribeInstancesOutput = opsee_aws_ec2.NewPopulatedDescribeInstancesOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ec2_DescribeSecurityGroupsOutput(r randyBezos, easy bool) *BezosResponse_Ec2_DescribeSecurityGroupsOutput {
	this := &BezosResponse_Ec2_DescribeSecurityGroupsOutput{}
	this.Ec2_DescribeSecurityGroupsOutput = opsee_aws_ec2.NewPopulatedDescribeSecurityGroupsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ec2_DescribeSubnetsOutput(r randyBezos, easy bool) *BezosResponse_Ec2_DescribeSubnetsOutput {
	this := &BezosResponse_Ec2_DescribeSubnetsOutput{}
	this.Ec2_DescribeSubnetsOutput = opsee_aws_ec2.NewPopulatedDescribeSubnetsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ec2_DescribeVpcsOutput(r randyBezos, easy bool) *BezosResponse_Ec2_DescribeVpcsOutput {
	this := &BezosResponse_Ec2_DescribeVpcsOutput{}
	this.Ec2_DescribeVpcsOutput = opsee_aws_ec2.NewPopulatedDescribeVpcsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ec2_DescribeRouteTablesOutput(r randyBezos, easy bool) *BezosResponse_Ec2_DescribeRouteTablesOutput {
	this := &BezosResponse_Ec2_DescribeRouteTablesOutput{}
	this.Ec2_DescribeRouteTablesOutput = opsee_aws_ec2.NewPopulatedDescribeRouteTablesOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Elb_DescribeLoadBalancersOutput(r randyBezos, easy bool) *BezosResponse_Elb_DescribeLoadBalancersOutput {
	this := &BezosResponse_Elb_DescribeLoadBalancersOutput{}
	this.Elb_DescribeLoadBalancersOutput = opsee_aws_elb.NewPopulatedDescribeLoadBalancersOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput(r randyBezos, easy bool) *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput {
	this := &BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput{}
	this.Autoscaling_DescribeAutoScalingGroupsOutput = opsee_aws_autoscaling.NewPopulatedDescribeAutoScalingGroupsOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Rds_DescribeDBInstancesOutput(r randyBezos, easy bool) *BezosResponse_Rds_DescribeDBInstancesOutput {
	this := &BezosResponse_Rds_DescribeDBInstancesOutput{}
	this.Rds_DescribeDBInstancesOutput = opsee_aws_rds.NewPopulatedDescribeDBInstancesOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_ListTasksOutput(r randyBezos, easy bool) *BezosResponse_Ecs_ListTasksOutput {
	this := &BezosResponse_Ecs_ListTasksOutput{}
	this.Ecs_ListTasksOutput = opsee_aws_ecs.NewPopulatedListTasksOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_DescribeTasksOutput(r randyBezos, easy bool) *BezosResponse_Ecs_DescribeTasksOutput {
	this := &BezosResponse_Ecs_DescribeTasksOutput{}
	this.Ecs_DescribeTasksOutput = opsee_aws_ecs.NewPopulatedDescribeTasksOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_DescribeContainerInstancesOutput(r randyBezos, easy bool) *BezosResponse_Ecs_DescribeContainerInstancesOutput {
	this := &BezosResponse_Ecs_DescribeContainerInstancesOutput{}
	this.Ecs_DescribeContainerInstancesOutput = opsee_aws_ecs.NewPopulatedDescribeContainerInstancesOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_ListClustersOutput(r randyBezos, easy bool) *BezosResponse_Ecs_ListClustersOutput {
	this := &BezosResponse_Ecs_ListClustersOutput{}
	this.Ecs_ListClustersOutput = opsee_aws_ecs.NewPopulatedListClustersOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_ListServicesOutput(r randyBezos, easy bool) *BezosResponse_Ecs_ListServicesOutput {
	this := &BezosResponse_Ecs_ListServicesOutput{}
	this.Ecs_ListServicesOutput = opsee_aws_ecs.NewPopulatedListServicesOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_DescribeServicesOutput(r randyBezos, easy bool) *BezosResponse_Ecs_DescribeServicesOutput {
	this := &BezosResponse_Ecs_DescribeServicesOutput{}
	this.Ecs_DescribeServicesOutput = opsee_aws_ecs.NewPopulatedDescribeServicesOutput(r, easy)
	return this
}
func NewPopulatedBezosResponse_Ecs_ListContainerInstancesOutput(r randyBezos, easy bool) *BezosResponse_Ecs_ListContainerInstancesOutput {
	this := &BezosResponse_Ecs_ListContainerInstancesOutput{}
	this.Ecs_ListContainerInstancesOutput = opsee_aws_ecs.NewPopulatedListContainerInstancesOutput(r, easy)
	return this
}

type randyBezos interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneBezos(r randyBezos) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringBezos(r randyBezos) string {
	v1 := r.Intn(100)
	tmps := make([]rune, v1)
	for i := 0; i < v1; i++ {
		tmps[i] = randUTF8RuneBezos(r)
	}
	return string(tmps)
}
func randUnrecognizedBezos(r randyBezos, maxFieldNumber int) (data []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		data = randFieldBezos(data, r, fieldNumber, wire)
	}
	return data
}
func randFieldBezos(data []byte, r randyBezos, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		data = encodeVarintPopulateBezos(data, uint64(key))
		v2 := r.Int63()
		if r.Intn(2) == 0 {
			v2 *= -1
		}
		data = encodeVarintPopulateBezos(data, uint64(v2))
	case 1:
		data = encodeVarintPopulateBezos(data, uint64(key))
		data = append(data, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		data = encodeVarintPopulateBezos(data, uint64(key))
		ll := r.Intn(100)
		data = encodeVarintPopulateBezos(data, uint64(ll))
		for j := 0; j < ll; j++ {
			data = append(data, byte(r.Intn(256)))
		}
	default:
		data = encodeVarintPopulateBezos(data, uint64(key))
		data = append(data, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return data
}
func encodeVarintPopulateBezos(data []byte, v uint64) []byte {
	for v >= 1<<7 {
		data = append(data, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	data = append(data, uint8(v))
	return data
}
func (m *BezosRequest) Size() (n int) {
	var l int
	_ = l
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovBezos(uint64(l))
	}
	l = len(m.Region)
	if l > 0 {
		n += 1 + l + sovBezos(uint64(l))
	}
	l = len(m.VpcId)
	if l > 0 {
		n += 1 + l + sovBezos(uint64(l))
	}
	if m.MaxAge != nil {
		l = m.MaxAge.Size()
		n += 1 + l + sovBezos(uint64(l))
	}
	if m.Input != nil {
		n += m.Input.Size()
	}
	return n
}

func (m *BezosRequest_Cloudwatch_ListMetricsInput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_ListMetricsInput != nil {
		l = m.Cloudwatch_ListMetricsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Cloudwatch_GetMetricStatisticsInput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_GetMetricStatisticsInput != nil {
		l = m.Cloudwatch_GetMetricStatisticsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Cloudwatch_DescribeAlarmsInput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_DescribeAlarmsInput != nil {
		l = m.Cloudwatch_DescribeAlarmsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_DescribeAlarmsForMetricInput != nil {
		l = m.Cloudwatch_DescribeAlarmsForMetricInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ec2_DescribeInstancesInput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeInstancesInput != nil {
		l = m.Ec2_DescribeInstancesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ec2_DescribeSecurityGroupsInput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeSecurityGroupsInput != nil {
		l = m.Ec2_DescribeSecurityGroupsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ec2_DescribeSubnetsInput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeSubnetsInput != nil {
		l = m.Ec2_DescribeSubnetsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ec2_DescribeVpcsInput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeVpcsInput != nil {
		l = m.Ec2_DescribeVpcsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ec2_DescribeRouteTablesInput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeRouteTablesInput != nil {
		l = m.Ec2_DescribeRouteTablesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Elb_DescribeLoadBalancersInput) Size() (n int) {
	var l int
	_ = l
	if m.Elb_DescribeLoadBalancersInput != nil {
		l = m.Elb_DescribeLoadBalancersInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput) Size() (n int) {
	var l int
	_ = l
	if m.Autoscaling_DescribeAutoScalingGroupsInput != nil {
		l = m.Autoscaling_DescribeAutoScalingGroupsInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Rds_DescribeDBInstancesInput) Size() (n int) {
	var l int
	_ = l
	if m.Rds_DescribeDBInstancesInput != nil {
		l = m.Rds_DescribeDBInstancesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_ListTasksInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListTasksInput != nil {
		l = m.Ecs_ListTasksInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_DescribeTasksInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_DescribeTasksInput != nil {
		l = m.Ecs_DescribeTasksInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_DescribeContainerInstancesInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_DescribeContainerInstancesInput != nil {
		l = m.Ecs_DescribeContainerInstancesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_ListClustersInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListClustersInput != nil {
		l = m.Ecs_ListClustersInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_ListServicesInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListServicesInput != nil {
		l = m.Ecs_ListServicesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_DescribeServicesInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_DescribeServicesInput != nil {
		l = m.Ecs_DescribeServicesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosRequest_Ecs_ListContainerInstancesInput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListContainerInstancesInput != nil {
		l = m.Ecs_ListContainerInstancesInput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse) Size() (n int) {
	var l int
	_ = l
	if m.LastModified != nil {
		l = m.LastModified.Size()
		n += 1 + l + sovBezos(uint64(l))
	}
	if m.Output != nil {
		n += m.Output.Size()
	}
	return n
}

func (m *BezosResponse_Cloudwatch_ListMetricsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_ListMetricsOutput != nil {
		l = m.Cloudwatch_ListMetricsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Cloudwatch_GetMetricStatisticsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_GetMetricStatisticsOutput != nil {
		l = m.Cloudwatch_GetMetricStatisticsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Cloudwatch_DescribeAlarmsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_DescribeAlarmsOutput != nil {
		l = m.Cloudwatch_DescribeAlarmsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput) Size() (n int) {
	var l int
	_ = l
	if m.Cloudwatch_DescribeAlarmsForMetricOutput != nil {
		l = m.Cloudwatch_DescribeAlarmsForMetricOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ec2_DescribeInstancesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeInstancesOutput != nil {
		l = m.Ec2_DescribeInstancesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ec2_DescribeSecurityGroupsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeSecurityGroupsOutput != nil {
		l = m.Ec2_DescribeSecurityGroupsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ec2_DescribeSubnetsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeSubnetsOutput != nil {
		l = m.Ec2_DescribeSubnetsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ec2_DescribeVpcsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeVpcsOutput != nil {
		l = m.Ec2_DescribeVpcsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ec2_DescribeRouteTablesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ec2_DescribeRouteTablesOutput != nil {
		l = m.Ec2_DescribeRouteTablesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Elb_DescribeLoadBalancersOutput) Size() (n int) {
	var l int
	_ = l
	if m.Elb_DescribeLoadBalancersOutput != nil {
		l = m.Elb_DescribeLoadBalancersOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput) Size() (n int) {
	var l int
	_ = l
	if m.Autoscaling_DescribeAutoScalingGroupsOutput != nil {
		l = m.Autoscaling_DescribeAutoScalingGroupsOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Rds_DescribeDBInstancesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Rds_DescribeDBInstancesOutput != nil {
		l = m.Rds_DescribeDBInstancesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_ListTasksOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListTasksOutput != nil {
		l = m.Ecs_ListTasksOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_DescribeTasksOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_DescribeTasksOutput != nil {
		l = m.Ecs_DescribeTasksOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_DescribeContainerInstancesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_DescribeContainerInstancesOutput != nil {
		l = m.Ecs_DescribeContainerInstancesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_ListClustersOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListClustersOutput != nil {
		l = m.Ecs_ListClustersOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_ListServicesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListServicesOutput != nil {
		l = m.Ecs_ListServicesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_DescribeServicesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_DescribeServicesOutput != nil {
		l = m.Ecs_DescribeServicesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}
func (m *BezosResponse_Ecs_ListContainerInstancesOutput) Size() (n int) {
	var l int
	_ = l
	if m.Ecs_ListContainerInstancesOutput != nil {
		l = m.Ecs_ListContainerInstancesOutput.Size()
		n += 2 + l + sovBezos(uint64(l))
	}
	return n
}

func sovBezos(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBezos(x uint64) (n int) {
	return sovBezos(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BezosRequest) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBezos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BezosRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BezosRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &opsee1.User{}
			}
			if err := m.User.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VpcId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VpcId = string(data[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAge", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxAge == nil {
				m.MaxAge = &opsee_types.Timestamp{}
			}
			if err := m.MaxAge.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_ListMetricsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.ListMetricsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Cloudwatch_ListMetricsInput{v}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_GetMetricStatisticsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.GetMetricStatisticsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Cloudwatch_GetMetricStatisticsInput{v}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_DescribeAlarmsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.DescribeAlarmsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Cloudwatch_DescribeAlarmsInput{v}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_DescribeAlarmsForMetricInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.DescribeAlarmsForMetricInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Cloudwatch_DescribeAlarmsForMetricInput{v}
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeInstancesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeInstancesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ec2_DescribeInstancesInput{v}
			iNdEx = postIndex
		case 202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeSecurityGroupsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeSecurityGroupsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ec2_DescribeSecurityGroupsInput{v}
			iNdEx = postIndex
		case 203:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeSubnetsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeSubnetsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ec2_DescribeSubnetsInput{v}
			iNdEx = postIndex
		case 204:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeVpcsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeVpcsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ec2_DescribeVpcsInput{v}
			iNdEx = postIndex
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeRouteTablesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeRouteTablesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ec2_DescribeRouteTablesInput{v}
			iNdEx = postIndex
		case 301:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Elb_DescribeLoadBalancersInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_elb.DescribeLoadBalancersInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Elb_DescribeLoadBalancersInput{v}
			iNdEx = postIndex
		case 401:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Autoscaling_DescribeAutoScalingGroupsInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_autoscaling.DescribeAutoScalingGroupsInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Autoscaling_DescribeAutoScalingGroupsInput{v}
			iNdEx = postIndex
		case 501:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rds_DescribeDBInstancesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_rds.DescribeDBInstancesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Rds_DescribeDBInstancesInput{v}
			iNdEx = postIndex
		case 601:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListTasksInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListTasksInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_ListTasksInput{v}
			iNdEx = postIndex
		case 602:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_DescribeTasksInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.DescribeTasksInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_DescribeTasksInput{v}
			iNdEx = postIndex
		case 603:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_DescribeContainerInstancesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.DescribeContainerInstancesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_DescribeContainerInstancesInput{v}
			iNdEx = postIndex
		case 604:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListClustersInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListClustersInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_ListClustersInput{v}
			iNdEx = postIndex
		case 605:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListServicesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListServicesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_ListServicesInput{v}
			iNdEx = postIndex
		case 606:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_DescribeServicesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.DescribeServicesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_DescribeServicesInput{v}
			iNdEx = postIndex
		case 607:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListContainerInstancesInput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListContainerInstancesInput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Input = &BezosRequest_Ecs_ListContainerInstancesInput{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBezos(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBezos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BezosResponse) Unmarshal(data []byte) error {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBezos
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BezosResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BezosResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastModified", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LastModified == nil {
				m.LastModified = &opsee_types.Timestamp{}
			}
			if err := m.LastModified.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_ListMetricsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.ListMetricsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Cloudwatch_ListMetricsOutput{v}
			iNdEx = postIndex
		case 102:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_GetMetricStatisticsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.GetMetricStatisticsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Cloudwatch_GetMetricStatisticsOutput{v}
			iNdEx = postIndex
		case 103:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_DescribeAlarmsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.DescribeAlarmsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Cloudwatch_DescribeAlarmsOutput{v}
			iNdEx = postIndex
		case 104:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cloudwatch_DescribeAlarmsForMetricOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_cloudwatch.DescribeAlarmsForMetricOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Cloudwatch_DescribeAlarmsForMetricOutput{v}
			iNdEx = postIndex
		case 201:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeInstancesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeInstancesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ec2_DescribeInstancesOutput{v}
			iNdEx = postIndex
		case 202:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeSecurityGroupsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeSecurityGroupsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ec2_DescribeSecurityGroupsOutput{v}
			iNdEx = postIndex
		case 203:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeSubnetsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeSubnetsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ec2_DescribeSubnetsOutput{v}
			iNdEx = postIndex
		case 204:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeVpcsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeVpcsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ec2_DescribeVpcsOutput{v}
			iNdEx = postIndex
		case 205:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ec2_DescribeRouteTablesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ec2.DescribeRouteTablesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ec2_DescribeRouteTablesOutput{v}
			iNdEx = postIndex
		case 301:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Elb_DescribeLoadBalancersOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_elb.DescribeLoadBalancersOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Elb_DescribeLoadBalancersOutput{v}
			iNdEx = postIndex
		case 401:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Autoscaling_DescribeAutoScalingGroupsOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_autoscaling.DescribeAutoScalingGroupsOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Autoscaling_DescribeAutoScalingGroupsOutput{v}
			iNdEx = postIndex
		case 501:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rds_DescribeDBInstancesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_rds.DescribeDBInstancesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Rds_DescribeDBInstancesOutput{v}
			iNdEx = postIndex
		case 601:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListTasksOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListTasksOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_ListTasksOutput{v}
			iNdEx = postIndex
		case 602:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_DescribeTasksOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.DescribeTasksOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_DescribeTasksOutput{v}
			iNdEx = postIndex
		case 603:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_DescribeContainerInstancesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.DescribeContainerInstancesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_DescribeContainerInstancesOutput{v}
			iNdEx = postIndex
		case 604:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListClustersOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListClustersOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_ListClustersOutput{v}
			iNdEx = postIndex
		case 605:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListServicesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListServicesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_ListServicesOutput{v}
			iNdEx = postIndex
		case 606:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_DescribeServicesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.DescribeServicesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_DescribeServicesOutput{v}
			iNdEx = postIndex
		case 607:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ecs_ListContainerInstancesOutput", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBezos
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &opsee_aws_ecs.ListContainerInstancesOutput{}
			if err := v.Unmarshal(data[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Output = &BezosResponse_Ecs_ListContainerInstancesOutput{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBezos(data[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBezos
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBezos(data []byte) (n int, err error) {
	l := len(data)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBezos
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := data[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if data[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBezos
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := data[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthBezos
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBezos
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := data[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBezos(data[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBezos = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBezos   = fmt.Errorf("proto: integer overflow")
)

var fileDescriptorBezos = []byte{
	// 1318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x98, 0xcd, 0x6f, 0x1b, 0x45,
	0x18, 0xc6, 0xbb, 0x8d, 0xe3, 0xc0, 0xa4, 0x3d, 0x64, 0xda, 0xa4, 0x8e, 0x93, 0xd8, 0xa9, 0xf3,
	0xe5, 0x26, 0xd2, 0x1a, 0x5c, 0x81, 0x80, 0x9e, 0xea, 0x56, 0x94, 0x48, 0xad, 0x2a, 0x39, 0x01,
	0x21, 0x90, 0x88, 0xd6, 0xeb, 0x89, 0xb3, 0x60, 0x7b, 0x97, 0x9d, 0xdd, 0x94, 0x70, 0x03, 0xc1,
	0x11, 0x09, 0x4e, 0x48, 0x1c, 0x39, 0x71, 0xe1, 0xce, 0x91, 0x23, 0x9f, 0x12, 0xe2, 0x06, 0x6d,
	0xf8, 0xfa, 0x1f, 0x90, 0x38, 0x32, 0xbb, 0xf3, 0x7a, 0x76, 0xf6, 0x63, 0xd6, 0xf6, 0xc1, 0x92,
	0x3d, 0xf3, 0xbc, 0xcf, 0xf3, 0x7a, 0x66, 0x67, 0xfc, 0x4b, 0xd0, 0x7c, 0x87, 0xbc, 0x6f, 0x53,
	0xdd, 0x71, 0x6d, 0xcf, 0xc6, 0xb3, 0xb6, 0x43, 0x09, 0x29, 0x3f, 0xd3, 0xb3, 0xbc, 0x13, 0xbf,
	0xa3, 0x9b, 0xf6, 0xa0, 0x11, 0x8e, 0x34, 0xc2, 0xe9, 0x8e, 0x7f, 0xcc, 0x3f, 0x86, 0x9f, 0xf8,
	0x5b, 0x5e, 0x58, 0x7e, 0x69, 0xa2, 0x0a, 0xef, 0xcc, 0x21, 0xb4, 0xe1, 0x59, 0x03, 0x42, 0x3d,
	0x63, 0xe0, 0x40, 0xed, 0x0b, 0xa9, 0xda, 0x8e, 0x41, 0x2d, 0xb3, 0x41, 0xcd, 0x13, 0x32, 0x30,
	0x1a, 0xc6, 0x23, 0xda, 0x30, 0xfb, 0xb6, 0xdf, 0x7d, 0x64, 0x78, 0xe6, 0x09, 0xf7, 0x80, 0xca,
	0x67, 0xc7, 0x57, 0x12, 0xb3, 0x39, 0x7d, 0x09, 0x9d, 0xba, 0xa4, 0xdf, 0x89, 0x95, 0xbc, 0x38,
	0xbe, 0xc4, 0xf0, 0x3d, 0x9b, 0x9a, 0x46, 0xdf, 0x1a, 0xf6, 0xa6, 0x4d, 0x73, 0xbb, 0xf1, 0x06,
	0xeb, 0xf9, 0x25, 0x3e, 0x25, 0x2e, 0x57, 0xd6, 0x1e, 0x2f, 0xa0, 0x4b, 0xad, 0x60, 0xbf, 0xdb,
	0xe4, 0x5d, 0x9f, 0x6d, 0x02, 0xae, 0xa2, 0x42, 0x30, 0x5d, 0xd2, 0xd6, 0xb5, 0xfa, 0x7c, 0x73,
	0x5e, 0xe7, 0x7b, 0xfa, 0x2a, 0x1b, 0x6a, 0x87, 0x13, 0x78, 0x09, 0x15, 0x5d, 0xd2, 0xb3, 0xec,
	0x61, 0xe9, 0x22, 0x93, 0x3c, 0xdd, 0x86, 0x4f, 0x78, 0x11, 0x15, 0x4f, 0x1d, 0xf3, 0xc8, 0xea,
	0x96, 0x66, 0xc2, 0xf1, 0x59, 0xf6, 0x69, 0xbf, 0x8b, 0x1b, 0x68, 0x6e, 0x60, 0xbc, 0x77, 0x64,
	0xf4, 0x48, 0xa9, 0x10, 0x5a, 0x2e, 0x81, 0x25, 0xef, 0xf7, 0x70, 0xb4, 0xf5, 0xed, 0x22, 0x93,
	0xdd, 0xee, 0x11, 0x6c, 0xa1, 0x95, 0x68, 0x73, 0x8f, 0xee, 0x5b, 0xd4, 0x7b, 0x40, 0x3c, 0xd7,
	0x32, 0xe9, 0xfe, 0xd0, 0xf1, 0xbd, 0x12, 0x09, 0x4d, 0xb6, 0xc1, 0x84, 0x7d, 0x79, 0x3d, 0x52,
	0xeb, 0x49, 0xf5, 0x2b, 0x17, 0xda, 0xe5, 0x68, 0x3a, 0x39, 0x8b, 0x3f, 0xd0, 0xd0, 0x86, 0x94,
	0x75, 0x8f, 0xc0, 0xf4, 0x81, 0x67, 0x78, 0x4c, 0x2b, 0x32, 0x8f, 0xc3, 0x4c, 0x3d, 0x3b, 0x53,
	0x55, 0xc5, 0xb2, 0x6b, 0x91, 0x4c, 0xa5, 0xc2, 0x2e, 0xaa, 0x48, 0x2d, 0xdc, 0x25, 0xd4, 0x74,
	0xad, 0x0e, 0xb9, 0xdd, 0x37, 0xdc, 0x01, 0xa4, 0xf7, 0xc2, 0xf4, 0x1b, 0xd9, 0xe9, 0x19, 0x05,
	0x2c, 0x78, 0x2d, 0x52, 0x64, 0x08, 0xf0, 0x27, 0x1a, 0xda, 0x51, 0x86, 0xbe, 0x6c, 0xbb, 0xbc,
	0x53, 0x9e, 0x7e, 0x12, 0xa6, 0x37, 0x27, 0x49, 0x8f, 0x57, 0xb2, 0x36, 0xb6, 0x55, 0x6d, 0xc4,
	0x95, 0xb8, 0x87, 0xca, 0xec, 0x54, 0x8a, 0x3e, 0xf6, 0x87, 0xec, 0x89, 0x18, 0x9a, 0x04, 0xbe,
	0xff, 0xf7, 0xfc, 0x51, 0xdc, 0x92, 0x5a, 0x60, 0x6a, 0x3d, 0x5b, 0xcd, 0x52, 0x97, 0xd9, 0x6c,
	0xf6, 0x24, 0x3e, 0x45, 0x55, 0x39, 0xe8, 0x80, 0x98, 0xbe, 0x6b, 0x79, 0x67, 0xf7, 0x5c, 0xdb,
	0x77, 0x20, 0xed, 0x07, 0x9e, 0xb6, 0xab, 0x48, 0xcb, 0x28, 0x61, 0x91, 0x15, 0x29, 0x32, 0x43,
	0x81, 0x0d, 0x54, 0x8a, 0xe5, 0xfa, 0x9d, 0x21, 0xf1, 0x20, 0xf0, 0x47, 0x1e, 0xb8, 0xa1, 0x0a,
	0x94, 0xb4, 0x2c, 0xe9, 0x9a, 0x9c, 0x24, 0x4d, 0xe1, 0xd7, 0xd1, 0xa2, 0x1c, 0xf1, 0x9a, 0x33,
	0x7a, 0x78, 0x7f, 0xe2, 0xfe, 0xeb, 0x0a, 0x7f, 0x21, 0x64, 0xe6, 0x57, 0x25, 0x73, 0x31, 0x8e,
	0x07, 0x68, 0x55, 0x76, 0x6e, 0xdb, 0xbe, 0x47, 0x0e, 0x8d, 0x4e, 0x7f, 0xb4, 0x3f, 0x3f, 0xf3,
	0x80, 0x1d, 0x45, 0x40, 0x52, 0xcf, 0x72, 0x56, 0xa4, 0x9c, 0xe4, 0x34, 0xa6, 0xa8, 0xc2, 0x2e,
	0x4f, 0x11, 0x77, 0xdf, 0x36, 0xba, 0x2d, 0xa3, 0x1f, 0x6c, 0xa2, 0x0b, 0x81, 0x5f, 0x5f, 0x4c,
	0x9d, 0x08, 0x56, 0xa1, 0xab, 0x2b, 0x82, 0x13, 0xc1, 0x14, 0x6a, 0x01, 0xfe, 0x5c, 0x43, 0xbb,
	0xd2, 0xfd, 0x1b, 0x1d, 0x09, 0x36, 0x76, 0xc0, 0xc7, 0xe4, 0x87, 0xe4, 0xb3, 0x99, 0xb0, 0x83,
	0xe7, 0xa4, 0x0e, 0xa4, 0x6a, 0x3d, 0xbf, 0x9a, 0x75, 0x73, 0x43, 0x52, 0xe7, 0x8b, 0x83, 0xd5,
	0x67, 0xb7, 0xbb, 0x68, 0xe8, 0x6e, 0x2b, 0x71, 0x3a, 0xfe, 0x9d, 0x49, 0xad, 0x3e, 0xd3, 0xeb,
	0x2a, 0x7d, 0xb0, 0xfa, 0x6c, 0x5e, 0x35, 0x8d, 0x1f, 0x22, 0xcc, 0x7e, 0xed, 0xc2, 0x6b, 0xf7,
	0xd0, 0xa0, 0xef, 0x40, 0xc8, 0x6f, 0xfc, 0xea, 0x5e, 0x8b, 0x6d, 0x31, 0xd5, 0xe3, 0x2a, 0x66,
	0xbd, 0xc0, 0x46, 0xe3, 0x83, 0xf8, 0x4d, 0xb4, 0x14, 0x18, 0x8e, 0x02, 0x25, 0xd3, 0xdf, 0xb9,
	0xe9, 0xf5, 0x84, 0x69, 0x5a, 0xc9, 0x8c, 0xd9, 0xb3, 0x4d, 0xd3, 0x13, 0xf8, 0x43, 0x76, 0x81,
	0xcb, 0xee, 0x77, 0xec, 0xa1, 0x67, 0x58, 0x43, 0xe2, 0x26, 0x16, 0xe9, 0x71, 0x21, 0x75, 0x83,
	0xcb, 0x51, 0x8a, 0xb2, 0xe0, 0x06, 0x97, 0x72, 0x15, 0x2a, 0x7e, 0xf2, 0xf8, 0x92, 0xdd, 0xe9,
	0xfb, 0xd4, 0x13, 0xcf, 0xe9, 0x93, 0x42, 0xc6, 0xc9, 0xe3, 0xab, 0x16, 0x13, 0xf2, 0x93, 0x47,
	0x53, 0xe3, 0xb2, 0xf3, 0x01, 0x71, 0x4f, 0x2d, 0xf1, 0x7d, 0xce, 0xd5, 0xce, 0x31, 0xa1, 0xe4,
	0x1c, 0x1b, 0xc7, 0x5d, 0xb4, 0x2c, 0xaf, 0x5b, 0xdc, 0xfd, 0x0f, 0xee, 0xbe, 0xa9, 0x58, 0xad,
	0x64, 0x42, 0x49, 0x5a, 0xa3, 0x78, 0x4a, 0x78, 0xdd, 0xc2, 0xca, 0x28, 0x76, 0xe6, 0xcf, 0x42,
	0xc6, 0x75, 0x0b, 0x6b, 0xa4, 0xdc, 0x95, 0xca, 0x68, 0xb5, 0xb2, 0x15, 0xad, 0x39, 0x34, 0x6b,
	0x05, 0x6f, 0x6a, 0xbf, 0x2e, 0xa0, 0xcb, 0x40, 0x37, 0xd4, 0xb1, 0x87, 0x94, 0xe0, 0x5b, 0xe8,
	0x72, 0xdf, 0xa0, 0xde, 0xd1, 0xc0, 0xee, 0x5a, 0xc7, 0x16, 0xe9, 0x02, 0xe7, 0xa8, 0xa0, 0xe4,
	0x52, 0x20, 0x7e, 0x00, 0x5a, 0xdc, 0x47, 0xab, 0xd9, 0x68, 0xf2, 0xd0, 0xf7, 0x22, 0x36, 0xd9,
	0x19, 0xcb, 0x26, 0x5c, 0x1e, 0x1c, 0xc5, 0x4c, 0x38, 0xe1, 0xd3, 0xf8, 0x23, 0x0d, 0x6d, 0xe6,
	0xd3, 0x09, 0xc4, 0x72, 0x3c, 0x69, 0x4c, 0x8c, 0x27, 0x22, 0x7e, 0x23, 0x97, 0x4f, 0xa0, 0x0d,
	0x1f, 0x55, 0x95, 0xac, 0x00, 0x0d, 0xf4, 0x52, 0x7b, 0xa8, 0x64, 0x04, 0x91, 0x5d, 0x51, 0xb1,
	0x01, 0xc4, 0x7e, 0xaa, 0xa1, 0xfa, 0x78, 0x46, 0x81, 0x06, 0x38, 0xa4, 0xdc, 0x9c, 0x0a, 0x52,
	0x44, 0x27, 0x3b, 0x63, 0x29, 0x05, 0x5a, 0x7a, 0x1b, 0xad, 0x64, 0x62, 0x0a, 0x34, 0x01, 0x9c,
	0xb2, 0x3d, 0x8e, 0x53, 0x44, 0x70, 0x39, 0x0b, 0x54, 0x20, 0xeb, 0x0c, 0xad, 0xab, 0x49, 0x05,
	0x02, 0x01, 0x55, 0xf6, 0x26, 0x42, 0x15, 0x91, 0x5a, 0x55, 0xb2, 0x0a, 0x44, 0x87, 0x77, 0x43,
	0x0a, 0x56, 0x20, 0x13, 0x68, 0x65, 0x33, 0x9f, 0x56, 0x44, 0x58, 0x29, 0x8d, 0x2b, 0x90, 0x12,
	0xfe, 0x2e, 0xc4, 0x79, 0x05, 0x22, 0x00, 0x58, 0xae, 0xe7, 0x00, 0x8b, 0xf0, 0x5f, 0x4c, 0x10,
	0x0b, 0x98, 0x3b, 0x68, 0x4d, 0x81, 0x2c, 0x90, 0x01, 0xcc, 0x52, 0x1f, 0xcf, 0x2c, 0x22, 0x6a,
	0x35, 0x1b, 0x5a, 0x20, 0x31, 0xb8, 0xea, 0x54, 0xd4, 0x02, 0x99, 0x80, 0x2d, 0xbb, 0x93, 0x60,
	0x4b, 0x74, 0x4c, 0x54, 0xdc, 0x02, 0xb9, 0x5f, 0x68, 0x68, 0x6f, 0x22, 0x70, 0x81, 0x26, 0x80,
	0x5c, 0x9e, 0x9f, 0x96, 0x5c, 0x44, 0x43, 0xbb, 0x93, 0xa0, 0x4b, 0xb4, 0x0d, 0x0a, 0x76, 0x81,
	0x6e, 0x00, 0x5e, 0xea, 0xe3, 0xe1, 0x25, 0xda, 0x86, 0x6c, 0x7a, 0x81, 0xc4, 0x36, 0xba, 0x12,
	0xc3, 0x17, 0xc8, 0x01, 0x7e, 0xa9, 0xa8, 0xf8, 0x45, 0xb8, 0x63, 0x19, 0x60, 0xc0, 0xf3, 0x2d,
	0x74, 0x2d, 0x45, 0x30, 0xe0, 0x0b, 0x08, 0x53, 0xcb, 0x43, 0x18, 0xe1, 0xbd, 0x94, 0x64, 0x18,
	0xf0, 0xff, 0x98, 0xdd, 0xf3, 0xf9, 0x10, 0x03, 0x69, 0x40, 0x31, 0x8d, 0x89, 0x29, 0x26, 0xba,
	0xe8, 0x73, 0x31, 0x46, 0x3e, 0x91, 0x71, 0x8e, 0x81, 0xe0, 0x27, 0xd9, 0xa4, 0x96, 0x56, 0x02,
	0xa9, 0xa5, 0x27, 0x64, 0xf3, 0x11, 0x23, 0x80, 0xf9, 0xb9, 0xda, 0x3c, 0xae, 0x94, 0xcc, 0xe3,
	0x13, 0xfc, 0xef, 0xc7, 0x34, 0xcd, 0x40, 0x00, 0xe0, 0xcc, 0xd6, 0x18, 0x9c, 0x11, 0x21, 0xcb,
	0x19, 0x3c, 0x23, 0xdf, 0xca, 0x2a, 0xa0, 0x81, 0x38, 0x20, 0x9a, 0xbd, 0x89, 0x88, 0x46, 0xbe,
	0x95, 0x69, 0x9e, 0xa4, 0xf5, 0x14, 0x2a, 0xda, 0xe1, 0xbb, 0xe6, 0x2d, 0x34, 0x1b, 0x32, 0x0d,
	0x6e, 0xa2, 0x19, 0xf6, 0xb3, 0x8d, 0xaf, 0x40, 0x92, 0xfc, 0x6f, 0x9c, 0xf2, 0xd5, 0xf8, 0x20,
	0xa7, 0x9f, 0xda, 0x85, 0xd6, 0xd6, 0x7f, 0x7f, 0x57, 0xb4, 0xaf, 0xfe, 0xa9, 0x68, 0xdf, 0xb0,
	0xd7, 0x77, 0xec, 0xf5, 0x0b, 0x7b, 0xfd, 0xc5, 0x5e, 0xdf, 0x7e, 0x59, 0xd5, 0xde, 0x98, 0xa3,
	0xfc, 0xfb, 0x76, 0x8a, 0xe1, 0x7f, 0x87, 0x6e, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x13,
	0x75, 0x38, 0x0c, 0x14, 0x00, 0x00,
}
