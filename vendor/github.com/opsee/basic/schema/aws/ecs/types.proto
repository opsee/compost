syntax = "proto2";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/opsee/protobuf/opseeproto/opsee.proto";
import "github.com/opsee/protobuf/opseeproto/types/timestamp.proto";

package opsee.aws.ecs;

option go_package = "ecs";
option (opseeproto.graphql) = true;


message Attribute {
  optional string Name = 2;
  optional string Value = 3;
}

message Container {
  optional string ContainerArn = 2;
  optional sint64 ExitCode = 3;
  optional string LastStatus = 4;
  optional string Name = 5;
  repeated NetworkBinding NetworkBindings = 6;
  optional string Reason = 7;
  optional string TaskArn = 8;
}

message ContainerDefinition {
  repeated string Command = 2;
  optional sint64 Cpu = 3;
  optional bool DisableNetworking = 4;
  repeated string DnsSearchDomains = 5;
  repeated string DnsServers = 6;
  map<string, string> DockerLabels = 7;
  repeated string DockerSecurityOptions = 8;
  repeated string EntryPoint = 9;
  repeated KeyValuePair Environment = 10;
  optional bool Essential = 11;
  repeated HostEntry ExtraHosts = 12;
  optional string Hostname = 13;
  optional string Image = 14;
  repeated string Links = 15;
  optional LogConfiguration LogConfiguration = 16;
  optional sint64 Memory = 17;
  repeated MountPoint MountPoints = 18;
  optional string Name = 19;
  repeated PortMapping PortMappings = 20;
  optional bool Privileged = 21;
  optional bool ReadonlyRootFilesystem = 22;
  repeated Ulimit Ulimits = 23;
  optional string User = 24;
  repeated VolumeFrom VolumesFrom = 25;
  optional string WorkingDirectory = 26;
}

message ContainerInstance {
  optional bool AgentConnected = 2;
  optional string AgentUpdateStatus = 3;
  repeated Attribute Attributes = 4;
  optional string ContainerInstanceArn = 5;
  optional string Ec2InstanceId = 6;
  optional sint64 PendingTasksCount = 7;
  repeated Resource RegisteredResources = 8;
  repeated Resource RemainingResources = 9;
  optional sint64 RunningTasksCount = 10;
  optional string Status = 11;
  optional VersionInfo VersionInfo = 12;
}

message ContainerOverride {
  repeated string Command = 2;
  repeated KeyValuePair Environment = 3;
  optional string Name = 4;
}

message Deployment {
  optional opsee.types.Timestamp CreatedAt = 2;
  optional sint64 DesiredCount = 3;
  optional string Id = 4;
  optional sint64 PendingCount = 5;
  optional sint64 RunningCount = 6;
  optional string Status = 7;
  optional string TaskDefinition = 8;
  optional opsee.types.Timestamp UpdatedAt = 9;
}

message DeploymentConfiguration {
  optional sint64 MaximumPercent = 2;
  optional sint64 MinimumHealthyPercent = 3;
}

message DescribeContainerInstancesInput {
  optional string Cluster = 2;
  repeated string ContainerInstances = 3;
}

message DescribeContainerInstancesOutput {
  repeated ContainerInstance ContainerInstances = 2;
  repeated Failure Failures = 3;
}

message DescribeServicesInput {
  optional string Cluster = 2;
  repeated string Services = 3;
}

message DescribeServicesOutput {
  repeated Failure Failures = 2;
  repeated Service Services = 3;
}

message DescribeTaskDefinitionInput {
  optional string TaskDefinition = 2;
}

message DescribeTaskDefinitionOutput {
  optional TaskDefinition TaskDefinition = 2;
}

message DescribeTasksInput {
  optional string Cluster = 2;
  repeated string Tasks = 3;
}

message DescribeTasksOutput {
  repeated Failure Failures = 2;
  repeated Task Tasks = 3;
}

message Failure {
  optional string Arn = 2;
  optional string Reason = 3;
}

message HostEntry {
  optional string Hostname = 2;
  optional string IpAddress = 3;
}

message HostVolumeProperties {
  optional string SourcePath = 2;
}

message KeyValuePair {
  optional string Name = 2;
  optional string Value = 3;
}

message ListClustersInput {
  optional sint64 MaxResults = 2;
  optional string NextToken = 3;
}

message ListClustersOutput {
  repeated string ClusterArns = 2;
  optional string NextToken = 3;
}

message ListContainerInstancesInput {
  optional string Cluster = 2;
  optional sint64 MaxResults = 3;
  optional string NextToken = 4;
}

message ListContainerInstancesOutput {
  repeated string ContainerInstanceArns = 2;
  optional string NextToken = 3;
}

message ListServicesInput {
  optional string Cluster = 2;
  optional sint64 MaxResults = 3;
  optional string NextToken = 4;
}

message ListServicesOutput {
  optional string NextToken = 2;
  repeated string ServiceArns = 3;
}

message ListTasksInput {
  optional string Cluster = 2;
  optional string ContainerInstance = 3;
  optional string DesiredStatus = 4;
  optional string Family = 5;
  optional sint64 MaxResults = 6;
  optional string NextToken = 7;
  optional string ServiceName = 8;
  optional string StartedBy = 9;
}

message ListTasksOutput {
  optional string NextToken = 2;
  repeated string TaskArns = 3;
}

message LoadBalancer {
  optional string ContainerName = 2;
  optional sint64 ContainerPort = 3;
  optional string LoadBalancerName = 4;
}

message LogConfiguration {
  optional string LogDriver = 2;
  map<string, string> Options = 3;
}

message MountPoint {
  optional string ContainerPath = 2;
  optional bool ReadOnly = 3;
  optional string SourceVolume = 4;
}

message NetworkBinding {
  optional string BindIP = 2;
  optional sint64 ContainerPort = 3;
  optional sint64 HostPort = 4;
  optional string Protocol = 5;
}

message PortMapping {
  optional sint64 ContainerPort = 2;
  optional sint64 HostPort = 3;
  optional string Protocol = 4;
}

message Resource {
  optional double DoubleValue = 2;
  optional sint64 IntegerValue = 3;
  optional sint64 LongValue = 4;
  optional string Name = 5;
  repeated string StringSetValue = 6;
  optional string Type = 7;
}

message Service {
  optional string ClusterArn = 2;
  optional opsee.types.Timestamp CreatedAt = 3;
  optional DeploymentConfiguration DeploymentConfiguration = 4;
  repeated Deployment Deployments = 5;
  optional sint64 DesiredCount = 6;
  repeated ServiceEvent Events = 7;
  repeated LoadBalancer LoadBalancers = 8;
  optional sint64 PendingCount = 9;
  optional string RoleArn = 10;
  optional sint64 RunningCount = 11;
  optional string ServiceArn = 12;
  optional string ServiceName = 13;
  optional string Status = 14;
  optional string TaskDefinition = 15;
}

message ServiceEvent {
  optional opsee.types.Timestamp CreatedAt = 2;
  optional string Id = 3;
  optional string Message = 4;
}

message Task {
  optional string ClusterArn = 2;
  optional string ContainerInstanceArn = 3;
  repeated Container Containers = 4;
  optional opsee.types.Timestamp CreatedAt = 5;
  optional string DesiredStatus = 6;
  optional string LastStatus = 7;
  optional TaskOverride Overrides = 8;
  optional opsee.types.Timestamp StartedAt = 9;
  optional string StartedBy = 10;
  optional opsee.types.Timestamp StoppedAt = 11;
  optional string StoppedReason = 12;
  optional string TaskArn = 13;
  optional string TaskDefinitionArn = 14;
}

message TaskDefinition {
  repeated ContainerDefinition ContainerDefinitions = 2;
  optional string Family = 3;
  repeated Attribute RequiresAttributes = 4;
  optional sint64 Revision = 5;
  optional string Status = 6;
  optional string TaskDefinitionArn = 7;
  repeated Volume Volumes = 8;
}

message TaskOverride {
  repeated ContainerOverride ContainerOverrides = 2;
}

message Ulimit {
  optional sint64 HardLimit = 2;
  optional string Name = 3;
  optional sint64 SoftLimit = 4;
}

message VersionInfo {
  optional string AgentHash = 2;
  optional string AgentVersion = 3;
  optional string DockerVersion = 4;
}

message Volume {
  optional HostVolumeProperties Host = 2;
  optional string Name = 3;
}

message VolumeFrom {
  optional bool ReadOnly = 2;
  optional string SourceContainer = 3;
}

